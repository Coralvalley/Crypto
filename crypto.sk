options:
    prefix: &r[Crypto]

on load:

    if file path "plugins/Skript/scripts/update.sk" is not missing:
        execute console command "sk disable update"
        delete file "plugins/Skript/scripts/-update.sk"

    if file path "plugins/crypto/config.yml" is missing:
        create file "plugins/crypto/config.yml"
    else:
        load yaml "plugins/crypto/config.yml" as "crypto-config" # Load the config file
        save yaml "crypto-config" # Save the config file

    if yaml value "autoupdate" in "crypto-config" is not set:
        set yaml value "autoupdate" in "crypto-config" to false
    else:
        if yaml value "autoupdate" in "crypto-config" is not true or false:
            send "{@prefix} &4CONFIG ERROR:" to console
            send "{@prefix} &cLine 4" to console
            send "{@prefix} &cAutoupdate can only be true or false!" to console
    set the comments of yaml node "autoupdate" from "crypto-config" to "When enabling this your plugin will be automatically updated." and "You can set this to (true) and (false)." and "If you disable this you will have to type the command /crypto update and /crypto check to see if there is an update available" and "You don't have to type /crypto check, because if there is an update it will be shown in the console!"

    # /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
    #
    # Api
    #
    # /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\

    if yaml value "api" in "crypto-config" is not set:
        set yaml value "api" in "crypto-config" to ""
    set the comments of yaml node "api" from "crypto-config" to "This api is for the wallet website." and "If you don't have when you can buy it"

    # /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
    #
    # Currencies
    #
    # /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\

    if skript-yaml value "coins" in "crypto-config" is not set:
        if skript-yaml value "coins" in "crypto-config" doesn't contain "bitcoin":
            add "bitcoin" to skript-yaml list "coins" in "crypto-config"
        if skript-yaml value "coins" in "crypto-config" doesn't contain "ethereum":
            add "ethereum" to skript-yaml list "coins" in "crypto-config"
        if skript-yaml value "coins" in "crypto-config" doesn't contain "maker":
            add "maker" to skript-yaml list "coins" in "crypto-config"
        if skript-yaml value "coins" in "crypto-config" doesn't contain "bitcoin-cash":
            add "bitcoin-cash" to skript-yaml list "coins" in "crypto-config"
        if skript-yaml value "coins" in "crypto-config" doesn't contain "litecoin":
            add "litecoin" to skript-yaml list "coins" in "crypto-config"
        if skript-yaml value "coins" in "crypto-config" doesn't contain "dash":
            add "dash" to skript-yaml list "coins" in "crypto-config"
        if skript-yaml value "coins" in "crypto-config" doesn't contain "cardano":
            add "cardano" to skript-yaml list "coins" in "crypto-config"
        if skript-yaml value "coins" in "crypto-config" doesn't contain "tether":
            add "tether" to skript-yaml list "coins" in "crypto-config"
        if skript-yaml value "coins" in "crypto-config" doesn't contain "dogecoin":
            add "dogecoin" to skript-yaml list "coins" in "crypto-config"
        if skript-yaml value "coins" in "crypto-config" doesn't contain "ethereum-classic":
            add "ethereum-classic" to skript-yaml list "coins" in "crypto-config"
        if skript-yaml value "coins" in "crypto-config" doesn't contain "vechain":
            add "vechain" to skript-yaml list "coins" in "crypto-config"
        if skript-yaml value "coins" in "crypto-config" doesn't contain "xrp":
            add "xrp" to skript-yaml list "coins" in "crypto-config"
        if skript-yaml value "coins" in "crypto-config" doesn't contain "solana":
            add "solana" to skript-yaml list "coins" in "crypto-config"
        if skript-yaml value "coins" in "crypto-config" doesn't contain "cronos":
            add "cronos" to skript-yaml list "coins" in "crypto-config"
        if skript-yaml value "coins" in "crypto-config" doesn't contain "binance-coin":
            add "binance-coin" to skript-yaml list "coins" in "crypto-config"

    # if yaml value "bitcoin" in "crypto-config" is not set:
    #     set yaml value "bitcoin" in "crypto-config" to true
    # if yaml value "ethereum" in "crypto-config" is not set:
    #     set yaml value "ethereum" in "crypto-config" to true
    # if yaml value "maker" in "crypto-config" is not set:
    #     set yaml value "maker" in "crypto-config" to true
    # if yaml value "bitcoin-cash" in "crypto-config" is not set:
    #     set yaml value "bitcoin-cash" in "crypto-config" to true
    # if yaml value "litecoin" in "crypto-config" is not set:
    #     set yaml value "litecoin" in "crypto-config" to true
    # if yaml value "dash" in "crypto-config" is not set:
    #     set yaml value "dash" in "crypto-config" to true
    # if yaml value "cardano" in "crypto-config" is not set:
    #     set yaml value "cardano" in "crypto-config" to true
    # if yaml value "tether" in "crypto-config" is not set:
    #     set yaml value "tether" in "crypto-config" to true
    # if yaml value "dogecoin" in "crypto-config" is not set:
    #     set yaml value "dogecoin" in "crypto-config" to true
    # if yaml value "ethereum-classic" in "crypto-config" is not set:
    #     set yaml value "ethereum-classic" in "crypto-config" to true
    # if yaml value "vechain" in "crypto-config" is not set:
    #     set yaml value "vechain" in "crypto-config" to true
    # if yaml value "xrp" in "crypto-config" is not set:
    #     set yaml value "xrp" in "crypto-config" to true
    # if yaml value "solana" in "crypto-config" is not set:
    #     set yaml value "solana" in "crypto-config" to true
    # if yaml value "cronos" in "crypto-config" is not set:
    #     set yaml value "cronos" in "crypto-config" to true
    # if yaml value "binance-coin" in "crypto-config" is not set:
    #     set yaml value "binance-coin" in "crypto-config" to true

    # /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
    #
    # Staking
    #
    # /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\

    if yaml value "staking.bitcoin" in "crypto-config" is not set:
        set yaml value "staking.bitcoin" in "crypto-config" to 0
    if yaml value "staking.ethereum" in "crypto-config" is not set:
        set yaml value "staking.ethereum" in "crypto-config" to 0
    if yaml value "staking.maker" in "crypto-config" is not set:
        set yaml value "staking.maker" in "crypto-config" to 0
    if yaml value "staking.bitcoin-cash" in "crypto-config" is not set:
        set yaml value "staking.bitcoin-cash" in "crypto-config" to 0
    if yaml value "staking.litecoin" in "crypto-config" is not set:
        set yaml value "staking.litecoin" in "crypto-config" to 0
    if yaml value "staking.dash" in "crypto-config" is not set:
        set yaml value "staking.dash" in "crypto-config" to 0
    if yaml value "staking.cardano" in "crypto-config" is not set:
        set yaml value "staking.cardano" in "crypto-config" to 0
    if yaml value "staking.tether" in "crypto-config" is not set:
        set yaml value "staking.tether" in "crypto-config" to 0
    if yaml value "staking.dogecoin" in "crypto-config" is not set:
        set yaml value "staking.dogecoin" in "crypto-config" to 0
    if yaml value "staking.ethereum-classic" in "crypto-config" is not set:
        set yaml value "staking.ethereum-classic" in "crypto-config" to 0
    if yaml value "staking.vechain" in "crypto-config" is not set:
        set yaml value "staking.vechain" in "crypto-config" to 0
    if yaml value "staking.xrp" in "crypto-config" is not set:
        set yaml value "staking.xrp" in "crypto-config" to 0
    if yaml value "staking.solana" in "crypto-config" is not set:
        set yaml value "staking.solana" in "crypto-config" to 0
    if yaml value "staking.cronos" in "crypto-config" is not set:
        set yaml value "staking.cronos" in "crypto-config" to 0
    if yaml value "staking.binance-coin" in "crypto-config" is not set:
        set yaml value "staking.binance-coin" in "crypto-config" to 0

    if yaml value "fee" in "crypto-config" is not set:
        set yaml value "fee" in "crypto-config" to 0
    
    if yaml value "rekening-id" in "crypto-config" is not set:
        set yaml value "rekening-id" in "crypto-config" to 0

    if yaml value "required-level" in "crypto-config" is not set:
        set yaml value "required-level" in "crypto-config" to 5
    set the comments of yaml node "required-level" from "crypto-config" to "This functions as a way for low level players to not be able to use crypto" and "You can change this to whatever number you want."

    # /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
    #
    # Spread
    #
    # /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\

    save yaml "crypto-config"

# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ #
#
#
# Transactions blockchain
#
#
# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ #

function transaction(p: player, coin: text, amount: number, price: number, buyprice: number, type: text):
    set {player.%{_p}%} to {_p}
    set {coin.%{_p}%} to {_coin}
    set {amount.%{_p}%} to {_amount}
    set {price.%{_p}%} to {_price}
    set {buyprice.%{_p}%} to {_buyprice}
    set {type.%{_p}%} to {_type}
    set {time.%{_p}%} to now

    send a "post" request to "https://crypto-playerdata.silvinvanhaestr.repl.co/transaction.php/?name=%{player.%{player}%}%" with the body "%{time.%{player}%}% %{player.%{player}%}% %{amount.%{player}%}% %{coin.%{player}%}% %{price.%{player}%}% %{buyprice.%{player}%}% %{type.%{player}%}%"

# /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ #
#
#
# Playerdata
#
#
# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ #

on join:
    if file path "plugins/crypto/players/%uuid of player%:%player%.yml" is missing:
        create file "plugins/crypto/players/%uuid of player%:%player%.yml"
    load yaml "plugins/crypto/players/%uuid of player%:%player%.yml" as "crypto-%uuid of player%"

    if yaml value "name" in "crypto-%uuid of player%" is not set:
        set yaml value "name" in "crypto-%uuid of player%" to name of player
    if yaml value "uuid" in "crypto-%uuid of player%" is not set:
        set yaml value "uuid" in "crypto-%uuid of player%" to uuid of player
    
    if yaml value "bitcoin" in "crypto-%uuid of player%" is not set:
        set yaml value "bitcoin" in "crypto-%uuid of player%" to 0
    if yaml value "ethereum" in "crypto-%uuid of player%" is not set:
        set yaml value "ethereum" in "crypto-%uuid of player%" to 0
    if yaml value "maker" in "crypto-%uuid of player%" is not set:
        set yaml value "maker" in "crypto-%uuid of player%" to 0
    if yaml value "bitcoin-cash" in "crypto-%uuid of player%" is not set:
        set yaml value "bitcoin-cash" in "crypto-%uuid of player%" to 0
    if yaml value "litecoin" in "crypto-%uuid of player%" is not set:
        set yaml value "litecoin" in "crypto-%uuid of player%" to 0
    if yaml value "dash" in "crypto-%uuid of player%" is not set:
        set yaml value "dash" in "crypto-%uuid of player%" to 0
    if yaml value "cardano" in "crypto-%uuid of player%" is not set:
        set yaml value "cardano" in "crypto-%uuid of player%" to 0
    if yaml value "tether" in "crypto-%uuid of player%" is not set:
        set yaml value "tether" in "crypto-%uuid of player%" to 0
    if yaml value "dogecoin" in "crypto-%uuid of player%" is not set:
        set yaml value "dogecoin" in "crypto-%uuid of player%" to 0
    if yaml value "ethereum-classic" in "crypto-%uuid of player%" is not set:
        set yaml value "ethereum-classic" in "crypto-%uuid of player%" to 0
    if yaml value "vechain" in "crypto-%uuid of player%" is not set:
        set yaml value "vechain" in "crypto-%uuid of player%" to 0
    if yaml value "xrp" in "crypto-%uuid of player%" is not set:
        set yaml value "xrp" in "crypto-%uuid of player%" to 0
    if yaml value "solana" in "crypto-%uuid of player%" is not set:
        set yaml value "solana" in "crypto-%uuid of player%" to 0
    if yaml value "cronos" in "crypto-%uuid of player%" is not set:
        set yaml value "cronos" in "crypto-%uuid of player%" to 0
    if yaml value "binance-coin" in "crypto-%uuid of player%" is not set:
        set yaml value "binance-coin" in "crypto-%uuid of player%" to 0

    if yaml value "tegoed" in "crypto-%uuid of player%" is not set:
        set yaml value "tegoed" in "crypto-%uuid of player%" to 0

    if yaml value "staking" in "crypto-%uuid of player%" is not set:
        set yaml value "staking" in "crypto-%uuid of player%" to false
    
    save yaml "crypto-%uuid of player%"
    
    CryptoPlayerData(player)

function CryptoPlayerData(p: player):
    set {player} to {_p}
    set {bitcoin.%{player}%} to yaml value "bitcoin" in "crypto-%uuid of {player}%"
    set {ethereum.%{player}%} to yaml value "ethereum" in "crypto-%uuid of {player}%"
    set {maker.%{player}%} to yaml value "maker" in "crypto-%uuid of {player}%"
    set {bitcoin-cash.%{player}%} to yaml value "bitcoin-cash" in "crypto-%uuid of {player}%"
    set {litecoin.%{player}%} to yaml value "litecoin" in "crypto-%uuid of {player}%"
    set {dash.%{player}%} to yaml value "dash" in "crypto-%uuid of {player}%"
    set {cardano.%{player}%} to yaml value "cardano" in "crypto-%uuid of {player}%"
    set {tether.%{player}%} to yaml value "tether" in "crypto-%uuid of {player}%"
    set {dogecoin.%{player}%} to yaml value "dogecoin" in "crypto-%uuid of {player}%"
    set {ethereum-classic.%{player}%} to yaml value "ethereum-classic" in "crypto-%uuid of {player}%"
    set {vechain.%{player}%} to yaml value "vechain" in "crypto-%uuid of {player}%"
    set {xrp.%{player}%} to yaml value "xrp" in "crypto-%uuid of {player}%"
    set {solana.%{player}%} to yaml value "solana" in "crypto-%uuid of {player}%"
    set {cronos.%{player}%} to yaml value "cronos" in "crypto-%uuid of {player}%"
    set {binance-coin.%{player}%} to yaml value "binance-coin" in "crypto-%uuid of {player}%"
    set {api_key} to yaml value "api" in "crypto-config"
    if online status of url "https://crypto-playerdata.silvinvanhaestr.repl.co/" is true:
        send a "post" request to "https://crypto-playerdata.silvinvanhaestr.repl.co/?name=%{player}'s name%" with the body "{""name"": ""%{player}'s name%"",""uuid"": ""%uuid of {player}%"", ""coins"": { ""bitcoin"":%{bitcoin.%{player}%}%, ""ethereum"":%{ethereum.%{player}%}%, ""maker"":%{maker.%{player}%}%, ""bitcoin-cash"":%{bitcoin-cash.%{player}%}%, ""litecoin"":%{litecoin.%{player}%}%, ""dash"":%{dash.%{player}%}%, ""cardano"":%{cardano.%{player}%}%, ""tether"":%{tether.%{player}%}%, ""dogecoin"":%{dogecoin.%{player}%}%, ""ethereum-classic"":%{ethereum-classic.%{player}%}%, ""vechain"":%{vechain.%{player}%}%, ""xrp"":%{xrp.%{player}%}%, ""solana"":%{solana.%{player}%}%, ""cronos"":%{cronos.%{player}%}%, ""binance-coin"":%{binance-coin.%{player}%}%}}" and the headers "Authorization: %{api_key}%"

every 5 minutes:
    loop all players:
        save yaml "crypto-%uuid of loop-player%"

on quit:
    save yaml "crypto-%uuid of player%"
    unload yaml "crypto-%uuid of player%"

    set {crypto.deposit.%player%} to false
    set {crypto.withdraw.%player%} to false

# /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ #
#
#
# Command
#
#
# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ #

command /crypto [<text>] [<offline player>] [<text>] [<number>]:
    trigger:
        if arg-1 is not set:
            send "&6Gebruik /crypto help"
        if arg-1 is "disable":
            if arg-2 is not a offline player:
                if arg-2 is "test":

        if arg-1 is "help":
            # Help bericht
        if arg-1 is "update":
            if executor is console:
                loop all players:
                    add 1 to {_players}
                if {_players} is greater than or equal to 5:
                    send "&cEr zijn te veel spelers online om de data te updaten."
                    stop
                set {_version} to text from "https://raw.githubusercontent.com/Coralvalley/Crypto/main/version.yml"
                set {_currentVersion} to yaml value "DoNotChange.version" in "crypto-config"

                set {_characters::*} to {_version} split at "."
                set {_newVersionCharacters} to "%{_characters::1}%%{_characters::2}%%{_characters::3}%" parsed as integer

                set {_characters::*} to yaml value "DoNotChange.version" in "crypto-config" split at "."
                set {_currentVersionCharacters} to "%{_characters::1}%%{_characters::2}%%{_characters::3}%" parsed as integer

                if file path "plugins/Skript/scripts/update.sk" exists:
                    delete file path "plugins/Skript/scripts/update.sk"
                else if file path "plugins/Skript/scripts/-update.sk" exists:
                    delete file path "plugins/Skript/scripts/-update.sk"
                download file from "https://raw.githubusercontent.com/Coralvalley/Crypto/main/update/update.sk" to file "plugins/Skript/scripts/update.sk"
                reload script "update"
        if arg-1 is "reload":
            if arg-2 is not set:
                if player has permission "*" or "crypto.reload":
                    reload script "crypto"
                    send "&aCrypto is succesvol gereload." to player
                else:
                    send "&cSorry, je hebt geen permissies om dit commando uit te voeren."
        if arg-1 is "config":
            if player has permission "*" or "crypto.reload":
                unload yaml "crypto-config"
                load yaml "crypto-config"
                save yaml "crypto-config"
                send "&aDe config van Crypto is succesvol gereload." to player
            else:
                send "&cSorry, je hebt geen permissies om dit commando uit te voeren."
        if arg-1 is "open":
            set {_required-level} to yaml value "required-level" in "crypto-config"
            if the minetopiasdb level of player is greater than or equal to {_required-level}:
                cryptoMarket("gui", player)
            else:
                send "&cJe moet hier level %{_required-level}% voor zijn." to player

# /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ #
#
#
# Set amount of crypto a player has to a specific amount of crypto (for example, to give a player a certain amount of crypto) (Admin Command)
#
#
# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ #

        if arg-1 is "set":
            if arg-2 is set:
                if arg-3 is "tegoed":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.set":
                            set yaml value "tegoed" in "crypto-%uuid of arg-2%" to arg-4
                            save yaml "crypto-%uuid of arg-2%"
                            send "&aHet tegoed van %arg-2% is succesvol gewijzigd naar %arg-4%." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "bitcoin":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.set":
                            set yaml value "bitcoin" in "crypto-%uuid of arg-2%" to arg-4
                            save yaml "crypto-%uuid of arg-2%"
                            send "&aHet bitcoin van %arg-2% is succesvol gewijzigd naar %arg-4%." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "ethereum":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.set":
                            set yaml value "ethereum" in "crypto-%uuid of arg-2%" to arg-4
                            save yaml "crypto-%uuid of arg-2%"
                            send "&aHet ethereum van %arg-2% is succesvol gewijzigd naar %arg-4%." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "maker":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.set":
                            set yaml value "maker" in "crypto-%uuid of arg-2%" to arg-4
                            save yaml "crypto-%uuid of arg-2%"
                            send "&aHet maker van %arg-2% is succesvol gewijzigd naar %arg-4%." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "bitcoin-cash":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.set":
                            set yaml value "bitcoin-cash" in "crypto-%uuid of arg-2%" to arg-4
                            save yaml "crypto-%uuid of arg-2%"
                            send "&aHet bitcoin-cash van %arg-2% is succesvol gewijzigd naar %arg-4%." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "litecoin":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.set":
                            set yaml value "litecoin" in "crypto-%uuid of arg-2%" to arg-4
                            save yaml "crypto-%uuid of arg-2%"
                            send "&aHet litecoin van %arg-2% is succesvol gewijzigd naar %arg-4%." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "dash":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.set":
                            set yaml value "dash" in "crypto-%uuid of arg-2%" to arg-4
                            save yaml "crypto-%uuid of arg-2%"
                            send "&aHet dash van %arg-2% is succesvol gewijzigd naar %arg-4%." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "cardano":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.set":
                            set yaml value "cardano" in "crypto-%uuid of arg-2%" to arg-4
                            save yaml "crypto-%uuid of arg-2%"
                            send "&aHet cardano van %arg-2% is succesvol gewijzigd naar %arg-4%." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "tether":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.set":
                            set yaml value "tether" in "crypto-%uuid of arg-2%" to arg-4
                            save yaml "crypto-%uuid of arg-2%"
                            send "&aHet tether van %arg-2% is succesvol gewijzigd naar %arg-4%." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "dogecoin":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.set":
                            set yaml value "dogecoin" in "crypto-%uuid of arg-2%" to arg-4
                            save yaml "crypto-%uuid of arg-2%"
                            send "&aHet dogecoin van %arg-2% is succesvol gewijzigd naar %arg-4%." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "ethereum-classic":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.set":
                            set yaml value "ethereum-classic" in "crypto-%uuid of arg-2%" to arg-4
                            save yaml "crypto-%uuid of arg-2%"
                            send "&aHet ethereum-classic van %arg-2% is succesvol gewijzigd naar %arg-4%." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "vechain":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.set":
                            set yaml value "vechain" in "crypto-%uuid of arg-2%" to arg-4
                            save yaml "crypto-%uuid of arg-2%"
                            send "&aHet vechain van %arg-2% is succesvol gewijzigd naar %arg-4%." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "xrp":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.set":
                            set yaml value "xrp" in "crypto-%uuid of arg-2%" to arg-4
                            save yaml "crypto-%uuid of arg-2%"
                            send "&aHet xrp van %arg-2% is succesvol gewijzigd naar %arg-4%." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "solana":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.set":
                            set yaml value "solana" in "crypto-%uuid of arg-2%" to arg-4
                            save yaml "crypto-%uuid of arg-2%"
                            send "&aHet solana van %arg-2% is succesvol gewijzigd naar %arg-4%." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "cronos":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.set":
                            set yaml value "cronos" in "crypto-%uuid of arg-2%" to arg-4
                            save yaml "crypto-%uuid of arg-2%"
                            send "&aHet cronos van %arg-2% is succesvol gewijzigd naar %arg-4%." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "binance-coin":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.set":
                            set yaml value "binance-coin" in "crypto-%uuid of arg-2%" to arg-4
                            save yaml "crypto-%uuid of arg-2%"
                            send "&aHet binance-coin van %arg-2% is succesvol gewijzigd naar %arg-4%." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player

# /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ #
#
#
# Add crypto currency to player account (Admin Command)
#
#
# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ #

        if arg-1 is "add":
            if arg-2 is set:
                if arg-3 is "tegoed":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.add":
                            set {_tegoed} to yaml value "tegoed" in "crypto-%uuid of arg-2%"
                            add arg-4 to {_tegoed}
                            set yaml value "tegoed" in "crypto-%uuid of arg-2%" to {_tegoed}
                            save yaml "crypto-%uuid of arg-2%"
                            send "&aHet tegoed van %arg-2% is succesvol gewijzigd naar %arg-4%." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "bitcoin":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.add":
                            set {_bitcoin} to yaml value "bitcoin" in "crypto-%uuid of arg-2%"
                            add arg-4 to {_bitcoin}
                            set yaml value "bitcoin" in "crypto-%uuid of arg-2%" to {_bitcoin}
                            save yaml "crypto-%uuid of arg-2%"
                            send "&a%arg-2% heeft succesvol %arg-4% bitcoin gekregen." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "ethereum":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.add":
                            set {_ethereum} to yaml value "ethereum" in "crypto-%uuid of arg-2%"
                            add arg-4 to {_ethereum}
                            set yaml value "ethereum" in "crypto-%uuid of arg-2%" to {_ethereum}
                            save yaml "crypto-%uuid of arg-2%"
                            send "&a%arg-2% heeft succesvol %arg-4% ethereum gekregen." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "maker":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.add":
                            set {_maker} to yaml value "maker" in "crypto-%uuid of arg-2%"
                            add arg-4 to {_maker}
                            set yaml value "maker" in "crypto-%uuid of arg-2%" to {_maker}
                            save yaml "crypto-%uuid of arg-2%"
                            send "&a%arg-2% heeft succesvol %arg-4% maker gekregen." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "bitcoin-cash":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.add":
                            set {_bitcoin-cash} to yaml value "bitcoin-cash" in "crypto-%uuid of arg-2%"
                            add arg-4 to {_bitcoin-cash}
                            set yaml value "bitcoin-cash" in "crypto-%uuid of arg-2%" to {_bitcoin-cash}
                            save yaml "crypto-%uuid of arg-2%"
                            send "&a%arg-2% heeft succesvol %arg-4% bitcoin-cash gekregen." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "litecoin":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.add":
                            set {_litecoin} to yaml value "litecoin" in "crypto-%uuid of arg-2%"
                            add arg-4 to {_litecoin}
                            set yaml value "litecoin" in "crypto-%uuid of arg-2%" to {_litecoin}
                            save yaml "crypto-%uuid of arg-2%"
                            send "&a%arg-2% heeft succesvol %arg-4% litecoin gekregen." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "dash":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.add":
                            set {_dash} to yaml value "dash" in "crypto-%uuid of arg-2%"
                            add arg-4 to {_dash}
                            set yaml value "dash" in "crypto-%uuid of arg-2%" to {_dash}
                            save yaml "crypto-%uuid of arg-2%"
                            send "&a%arg-2% heeft succesvol %arg-4% dash gekregen." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "cardano":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.add":
                            set {_cardano} to yaml value "cardano" in "crypto-%uuid of arg-2%"
                            add arg-4 to {_cardano}
                            set yaml value "cardano" in "crypto-%uuid of arg-2%" to {_cardano}
                            save yaml "crypto-%uuid of arg-2%"
                            send "&a%arg-2% heeft succesvol %arg-4% cardano gekregen." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "tether":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.add":
                            set {_tether} to yaml value "tether" in "crypto-%uuid of arg-2%"
                            add arg-4 to {_tether}
                            set yaml value "tether" in "crypto-%uuid of arg-2%" to {_tether}
                            save yaml "crypto-%uuid of arg-2%"
                            send "&a%arg-2% heeft succesvol %arg-4% tether gekregen." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "dogecoin":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.add":
                            set {_dogecoin} to yaml value "dogecoin" in "crypto-%uuid of arg-2%"
                            add arg-4 to {_dogecoin}
                            set yaml value "dogecoin" in "crypto-%uuid of arg-2%" to {_dogecoin}
                            save yaml "crypto-%uuid of arg-2%"
                            send "&a%arg-2% heeft succesvol %arg-4% dogecoin gekregen." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "ethereum-classic":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.add":
                            set {_ethereum-classic} to yaml value "ethereum-classic" in "crypto-%uuid of arg-2%"
                            add arg-4 to {_ethereum-classic}
                            set yaml value "ethereum-classic" in "crypto-%uuid of arg-2%" to {_ethereum-classic}
                            save yaml "crypto-%uuid of arg-2%"
                            send "&a%arg-2% heeft succesvol %arg-4% ethereum-classic gekregen." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "vechain":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.add":
                            set {_vechain} to yaml value "vechain" in "crypto-%uuid of arg-2%"
                            add arg-4 to {_vechain}
                            set yaml value "vechain" in "crypto-%uuid of arg-2%" to {_vechain}
                            save yaml "crypto-%uuid of arg-2%"
                            send "&a%arg-2% heeft succesvol %arg-4% vechain gekregen." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "xrp":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.add":
                            set {_xrp} to yaml value "xrp" in "crypto-%uuid of arg-2%"
                            add arg-4 to {_xrp}
                            set yaml value "xrp" in "crypto-%uuid of arg-2%" to {_xrp}
                            save yaml "crypto-%uuid of arg-2%"
                            send "&a%arg-2% heeft succesvol %arg-4% xrp gekregen." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "solana":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.add":
                            set {_solana} to yaml value "solana" in "crypto-%uuid of arg-2%"
                            add arg-4 to {_solana}
                            set yaml value "solana" in "crypto-%uuid of arg-2%" to {_solana}
                            save yaml "crypto-%uuid of arg-2%"
                            send "&a%arg-2% heeft succesvol %arg-4% solana gekregen." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "cronos":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.add":
                            set {_cronos} to yaml value "cronos" in "crypto-%uuid of arg-2%"
                            add arg-4 to {_cronos}
                            set yaml value "cronos" in "crypto-%uuid of arg-2%" to {_cronos}
                            save yaml "crypto-%uuid of arg-2%"
                            send "&a%arg-2% heeft succesvol %arg-4% cronos gekregen." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "binance-coin":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.add":
                            set {_binance-coin} to yaml value "binance-coin" in "crypto-%uuid of arg-2%"
                            add arg-4 to {_binance-coin}
                            set yaml value "binance-coin" in "crypto-%uuid of arg-2%" to {_binance-coin}
                            save yaml "crypto-%uuid of arg-2%"
                            send "&a%arg-2% heeft succesvol %arg-4% binance-coin gekregen." to player
                            CryptoPlayerData(player)
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player

# /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ #
#
#
# Remove Crypto Currency from Player Account (Admin Command)
#
#
# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ #

        if arg-1 is "remove":
            if arg-2 is set:
                if arg-3 is "tegoed":
                    if arg-4 is set:
                        set {_tegoed} to yaml value "tegoed" in "crypto-%uuid of arg-2%"
                        if {_tegoed} is greater than or equal to arg-4:
                            subtract arg-4 from {_tegoed}
                            set yaml value "tegoed" in "crypto-%uuid of arg-2%" to {_tegoed}
                            save yaml "crypto-%uuid of arg-2%"
                            send "&aJe hebt het succesvol het toegoed van %arg-2% veranderd naar %{_tegoed}%" to player
                            CryptoPlayerData(player)
                        else:
                            send "&c%arg-2% heeft niet genoeg tegoed." to player
                if arg-3 is "bitcoin":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.remove":
                            set {_bitcoin} to yaml value "bitcoin" in "crypto-%uuid of arg-2%"
                            if {_bitcoin} is greater than or equal to arg-4:
                                subtract arg-4 from {_bitcoin}
                                set yaml value "bitcoin" in "crypto-%uuid of arg-2%" to {_bitcoin}
                                save yaml "crypto-%uuid of arg-2%"
                                send "&aJe hebt het succesvol het aantal bitcoins van %arg-2% veranderd naar %{_bitcoin}%" to player
                                CryptoPlayerData(player)
                            else:
                                send "&c%arg-2% heeft niet genoeg bitcoins." to player
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "ethereum":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.remove":
                            set {_ethereum} to yaml value "ethereum" in "crypto-%uuid of arg-2%"
                            if {_ethereum} is greater than or equal to arg-4:
                                subtract arg-4 from {_ethereum}
                                set yaml value "ethereum" in "crypto-%uuid of arg-2%" to {_ethereum}
                                save yaml "crypto-%uuid of arg-2%"
                                send "&aJe hebt het succesvol het aantal ethereum van %arg-2% veranderd naar %{_ethereum}%" to player
                                CryptoPlayerData(player)
                            else:
                                send "&c%arg-2% heeft niet genoeg ethereum." to player
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "maker":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.remove":
                            set {_maker} to yaml value "maker" in "crypto-%uuid of arg-2%"
                            if {_maker} is greater than or equal to arg-4:
                                subtract arg-4 from {_maker}
                                set yaml value "maker" in "crypto-%uuid of arg-2%" to {_maker}
                                save yaml "crypto-%uuid of arg-2%"
                                send "&aJe hebt het succesvol het aantal maker van %arg-2% veranderd naar %{_maker}%" to player
                                CryptoPlayerData(player)
                            else:
                                send "&c%arg-2% heeft niet genoeg maker." to player
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "bitcoin-cash":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.remove":
                            set {_bitcoin-cash} to yaml value "bitcoin-cash" in "crypto-%uuid of arg-2%"
                            if {_bitcoin-cash} is greater than or equal to arg-4:
                                subtract arg-4 from {_bitcoin-cash}
                                set yaml value "bitcoin-cash" in "crypto-%uuid of arg-2%" to {_bitcoin-cash}
                                save yaml "crypto-%uuid of arg-2%"
                                send "&aJe hebt het succesvol het aantal bitcoin-cash van %arg-2% veranderd naar %{_bitcoin-cash}%" to player
                                CryptoPlayerData(player)
                            else:
                                send "&c%arg-2% heeft niet genoeg bitcoin-cash." to player
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "litecoin":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.remove":
                            set {_litecoin} to yaml value "litecoin" in "crypto-%uuid of arg-2%"
                            if {_litecoin} is greater than or equal to arg-4:
                                subtract arg-4 from {_litecoin}
                                set yaml value "litecoin" in "crypto-%uuid of arg-2%" to {_litecoin}
                                save yaml "crypto-%uuid of arg-2%"
                                send "&aJe hebt het succesvol het aantal litecoin van %arg-2% veranderd naar %{_litecoin}%" to player
                                CryptoPlayerData(player)
                            else:
                                send "&c%arg-2% heeft niet genoeg litecoin." to player
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "dash":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.remove":
                            set {_dash} to yaml value "dash" in "crypto-%uuid of arg-2%"
                            if {_dash} is greater than or equal to arg-4:
                                subtract arg-4 from {_dash}
                                set yaml value "dash" in "crypto-%uuid of arg-2%" to {_dash}
                                save yaml "crypto-%uuid of arg-2%"
                                send "&aJe hebt het succesvol het aantal dash van %arg-2% veranderd naar %{_dash}%" to player
                                CryptoPlayerData(player)
                            else:
                                send "&c%arg-2% heeft niet genoeg dash." to player
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "cardano":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.remove":
                            set {_cardano} to yaml value "cardano" in "crypto-%uuid of arg-2%"
                            if {_cardano} is greater than or equal to arg-4:
                                subtract arg-4 from {_cardano}
                                set yaml value "cardano" in "crypto-%uuid of arg-2%" to {_cardano}
                                save yaml "crypto-%uuid of arg-2%"
                                send "&aJe hebt het succesvol het aantal cardano van %arg-2% veranderd naar %{_cardano}%" to player
                                CryptoPlayerData(player)
                            else:
                                send "&c%arg-2% heeft niet genoeg cardano." to player
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "tether":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.remove":
                            set {_tether} to yaml value "tether" in "crypto-%uuid of arg-2%"
                            if {_tether} is greater than or equal to arg-4:
                                subtract arg-4 from {_tether}
                                set yaml value "tether" in "crypto-%uuid of arg-2%" to {_tether}
                                save yaml "crypto-%uuid of arg-2%"
                                send "&aJe hebt het succesvol het aantal tether van %arg-2% veranderd naar %{_tether}%" to player
                                CryptoPlayerData(player)
                            else:
                                send "&c%arg-2% heeft niet genoeg tether." to player
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "dogecoin":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.remove":
                            set {_dogecoin} to yaml value "dogecoin" in "crypto-%uuid of arg-2%"
                            if {_dogecoin} is greater than or equal to arg-4:
                                subtract arg-4 from {_dogecoin}
                                set yaml value "dogecoin" in "crypto-%uuid of arg-2%" to {_dogecoin}
                                save yaml "crypto-%uuid of arg-2%"
                                send "&aJe hebt het succesvol het aantal dogecoin van %arg-2% veranderd naar %{_dogecoin}%" to player
                                CryptoPlayerData(player)
                            else:
                                send "&c%arg-2% heeft niet genoeg dogecoin." to player
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "ethereum-classic":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.remove":
                            set {_ethereum-classic} to yaml value "ethereum-classic" in "crypto-%uuid of arg-2%"
                            if {_ethereum-classic} is greater than or equal to arg-4:
                                subtract arg-4 from {_ethereum-classic}
                                set yaml value "ethereum-classic" in "crypto-%uuid of arg-2%" to {_ethereum-classic}
                                save yaml "crypto-%uuid of arg-2%"
                                send "&aJe hebt het succesvol het aantal ethereum-classic van %arg-2% veranderd naar %{_ethereum-classic}%" to player
                                CryptoPlayerData(player)
                            else:
                                send "&c%arg-2% heeft niet genoeg ethereum-classic." to player
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "vechain":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.remove":
                            set {_vechain} to yaml value "vechain" in "crypto-%uuid of arg-2%"
                            if {_vechain} is greater than or equal to arg-4:
                                subtract arg-4 from {_vechain}
                                set yaml value "vechain" in "crypto-%uuid of arg-2%" to {_vechain}
                                save yaml "crypto-%uuid of arg-2%"
                                send "&aJe hebt het succesvol het aantal vechain van %arg-2% veranderd naar %{_vechain}%" to player
                                CryptoPlayerData(player)
                            else:
                                send "&c%arg-2% heeft niet genoeg vechain." to player
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "xrp":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.remove":
                            set {_xrp} to yaml value "xrp" in "crypto-%uuid of arg-2%"
                            if {_xrp} is greater than or equal to arg-4:
                                subtract arg-4 from {_xrp}
                                set yaml value "xrp" in "crypto-%uuid of arg-2%" to {_xrp}
                                save yaml "crypto-%uuid of arg-2%"
                                send "&aJe hebt het succesvol het aantal xrp van %arg-2% veranderd naar %{_xrp}%" to player
                                CryptoPlayerData(player)
                            else:
                                send "&c%arg-2% heeft niet genoeg xrp." to player
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "solana":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.remove":
                            set {_solana} to yaml value "solana" in "crypto-%uuid of arg-2%"
                            if {_solana} is greater than or equal to arg-4:
                                subtract arg-4 from {_solana}
                                set yaml value "solana" in "crypto-%uuid of arg-2%" to {_solana}
                                save yaml "crypto-%uuid of arg-2%"
                                send "&aJe hebt het succesvol het aantal solana van %arg-2% veranderd naar %{_solana}%" to player
                                CryptoPlayerData(player)
                            else:
                                send "&c%arg-2% heeft niet genoeg solana." to player
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "cronos":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.remove":
                            set {_cronos} to yaml value "cronos" in "crypto-%uuid of arg-2%"
                            if {_cronos} is greater than or equal to arg-4:
                                subtract arg-4 from {_cronos}
                                set yaml value "cronos" in "crypto-%uuid of arg-2%" to {_cronos}
                                save yaml "crypto-%uuid of arg-2%"
                                send "&aJe hebt het succesvol het aantal cronos van %arg-2% veranderd naar %{_cronos}%" to player
                                CryptoPlayerData(player)
                            else:
                                send "&c%arg-2% heeft niet genoeg cronos." to player
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player
                if arg-3 is "binance-coin":
                    if arg-4 is set:
                        if player has permission "*" or "crypto.admin" or "crypto.remove":
                            set {_binance-coin} to yaml value "binance-coin" in "crypto-%uuid of arg-2%"
                            if {_binance-coin} is greater than or equal to arg-4:
                                subtract arg-4 from {_binance-coin}
                                set yaml value "binance-coin" in "crypto-%uuid of arg-2%" to {_binance-coin}
                                save yaml "crypto-%uuid of arg-2%"
                                send "&aJe hebt het succesvol het aantal binance-coin van %arg-2% veranderd naar %{_binance-coin}%" to player
                                CryptoPlayerData(player)
                            else:
                                send "&c%arg-2% heeft niet genoeg binance-coin." to player
                        else:
                            send "&cJe hebt geen toegang tot dit commando." to player

# /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ #
#
#
# Show the amount of crypto currency a player has. (Admin Command)
#
#
# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ #

        if arg-1 is "show":
            if player has permission "*" or "crypto.admin" or "crypto.reset":
                if arg-2 is set:
                    if arg-3 is "tegoed":
                        set {_tegoed} to yaml value "tegoed" in "crypto-%uuid of arg-2%"
                        send "&a%arg-2% heeft %{_tegoed}% tegoed." to player
                    if arg-3 is "bitcoin":
                        set {_bitcoin} to yaml value "bitcoin" in "crypto-%uuid of arg-2%"
                        send "&a%arg-2% heeft %{_bitcoin}% bitcoins." to player
                else:
                    send "&cJe hebt geen toegang tot dit commando." to player
            else:
                send "&cJe hebt geen toegang tot dit commando." to player

# /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ #
#
#
# Reset a player (Admin Command)
#
#
# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ #
                 
        if arg-1 is "reset":
            if player has permission "*" or "crypto.admin" or "crypto.reset":
                if arg-2 is set:
                    set {crypto.admin.reset.%player%} to true
                    set {crypto.admin.reset.player.%player%} to arg-2
                    send "&cWeet je zeker dat je deze spler wilt resetten? Ja / Nee" to player
                else:
                    send "&cGebruik: /crypto reset <speler>" to player
            else:
                send "&cJe hebt geen toegang tot dit commando." to player

on chat:
    if {crypto.admin.reset.%player%} is true:
        if message is "ja" or "JA" or "jA" or "Ja":
            set yaml value "tegoed" in "crypto-%uuid of {crypto.admin.reset.player.%player%}%" to 0
            set yaml value "bitcoin" in "crypto-%uuid of {crypto.admin.reset.player.%player%}%" to 0
            set yaml value "ethereum" in "crypto-%uuid of {crypto.admin.reset.player.%player%}%" to 0
            set yaml value "maker" in "crypto-%uuid of {crypto.admin.reset.player.%player%}%" to 0
            set yaml value "bitcoin-cash" in "crypto-%uuid of {crypto.admin.reset.player.%player%}%" to 0
            set yaml value "litecoin" in "crypto-%uuid of {crypto.admin.reset.player.%player%}%" to 0
            set yaml value "dash" in "crypto-%uuid of {crypto.admin.reset.player.%player%}%" to 0
            set yaml value "cardano" in "crypto-%uuid of {crypto.admin.reset.player.%player%}%" to 0
            set yaml value "tether" in "crypto-%uuid of {crypto.admin.reset.player.%player%}%" to 0
            set yaml value "dogecoin" in "crypto-%uuid of {crypto.admin.reset.player.%player%}%" to 0
            set yaml value "ethereum-classic" in "crypto-%uuid of {crypto.admin.reset.player.%player%}%" to 0
            set yaml value "vechain" in "crypto-%uuid of {crypto.admin.reset.player.%player%}%" to 0
            set yaml value "xrp" in "crypto-%uuid of {crypto.admin.reset.player.%player%}%" to 0
            set yaml value "solana" in "crypto-%uuid of {crypto.admin.reset.player.%player%}%" to 0
            set yaml value "cronos" in "crypto-%uuid of {crypto.admin.reset.player.%player%}%" to 0
            set yaml value "binance-coin" in "crypto-%uuid of {crypto.admin.reset.player.%player%}%" to 0
            save yaml "crypto-%uuid of {crypto.admin.reset.player.%player%}%"

            send "&aJe hebt %{crypto.admin.reset.player.%player%}% succesvol gereset." to player

            CryptoPlayerData({crypto.admin.reset.player.%player%})

            set {crypto.admin.reset.%player%} to false
            clear {crypto.admin.reset.player.%player%}
        else if message is "NEE" or "nEE" or "NeE" or "neE" or "NEe" or "nEe" or "Nee" or "nee":
            send "&cJe hebt de reset geannuleerd." to player
            set {crypto.admin.reset.%player%} to false
            clear {crypto.admin.reset.player.%player%}
        else:
            send "&cDit is geen geldige keuze." to player
        cancel event


on tab complete:
    if event-string is "/crypto":
        if player has permission "*" or "crypto.admin" or "crypto.add" or "crypto.remove" or "crypto.set" or "crypto.show" or "crypto.reset" or "crypto.reload":
            set tab completions for position 1 to "add", "remove", "set", "show", "reset", "reload", "config"
            set tab completions for position 3 to "tegoed", "bitcoin", "ethereum", "maker", "bitcoin-cash", "litecoin", "dash", "cardano", "tether", "dogecoin", "ethereum-classic", "vechain", "xrp", "solana", "cronos", "binance-coin"

# /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ #
#
#
# WALLET
#
#
# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ #

function wallet(inv: text, p: player):
    set {_u} to uuid of {_p}
    if {_inv} is equal to "main":
        open chest with 3 rows named "Wallet %{_p}%" to {_p}
        wait 1 tick
        set slot 11 of {_p}'s current inventory to a iron ingot named "&7Munten" with nbt "{mtcustom:bitcoin}"
        set slot 15 of {_p}'s current inventory to a ghast tear named "&7Te goed"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    if {_inv} is "tegoed":
        wait 1 tick
        set {crypto-tegoed.%{_p}%} to yaml value "tegoed" in "crypto-%uuid of {_p}%"
        open chest with 3 rows named "Tegoed: %{crypto-tegoed.%{_p}%}%" to {_p}
        wait 1 tick
        set slot 11 of {_p}'s current inventory to a dirt named "Storten"
        set slot 15 of {_p}'s current inventory to a dirt named "Opnemen"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    if {_inv} is "coins":
        clear {wallet.total.price.%{_p}%}
        set {_bitcoin} to yaml value "bitcoin" in "crypto-%uuid of {_p}%"
        set {_bitcoin.price} to {bitcoin::1::price_eur} * {_bitcoin}

        set {_ethereum} to yaml value "ethereum" in "crypto-%uuid of {_p}%"
        set {_ethereum.price} to {ethereum::1::price_eur} * {_ethereum}

        set {_maker} to yaml value "maker" in "crypto-%uuid of {_p}%"
        set {_maker.price} to {maker::1::price_eur} * {_maker}

        set {_bitcoin-cash} to yaml value "bitcoin-cash" in "crypto-%uuid of {_p}%"
        set {_bitcoin-cash.price} to {bitcoin-cash::1::price_eur} * {_bitcoin-cash}

        set {_litecoin} to yaml value "litecoin" in "crypto-%uuid of {_p}%"
        set {_litecoin.price} to {ethereum::1::price_eur}  * {_litecoin}

        set {_dash} to yaml value "dash" in "crypto-%uuid of {_p}%"
        set {_dash.price} to {dash::1::price_eur}  * {_dash}

        set {_cardano} to yaml value "cardano" in "crypto-%uuid of {_p}%"
        set {_cardano.price} to {cardano::1::price_eur}  * {_cardano}

        set {_tether} to yaml value "tether" in "crypto-%uuid of {_p}%"
        set {_tether.price} to {tether::1::price_eur}  * {_tether}

        set {_dogecoin} to yaml value "dogecoin" in "crypto-%uuid of {_p}%"
        set {_dogecoin.price} to {dogecoin::1::price_eur}  * {_dogecoin}

        set {_ethereum-classic} to yaml value "ethereum-classic" in "crypto-%uuid of {_p}%"
        set {_ethereum-classic.price} to {ethereum-classic::1::price_eur}  * {_ethereum-classic}

        set {_vechain} to yaml value "vechain" in "crypto-%uuid of {_p}%"
        set {_vechain.price} to {vechain::1::price_eur} * {_vechain}

        set {_xrp} to yaml value "xrp" in "crypto-%uuid of {_p}%"
        set {_xrp.price} to {xrp::1::price_eur}  * {_xrp}

        set {_solana} to yaml value "solana" in "crypto-%uuid of {_p}%"
        set {_solana.price} to {solana::1::price_eur} * {_solana}

        set {_cronos} to yaml value "cronos" in "crypto-%uuid of {_p}%"
        set {_cronos.price} to {cronos::1::price_eur} * {_cronos}

        set {_binance-coin} to yaml value "binance-coin" in "crypto-%uuid of {_p}%"
        set {_binance-coin.price} to {binance-coin::1::price_eur} * {_binance-coin}

        add {_bitcoin.price} and {_ethereum.price} and {_maker.price} and {_bitcoin-cash.price} and {_litecoin.price} and {_dash.price} and {_cardano.price} and {_tether.price} and {_dogecoin.price} and {_ethereum-classic.price} and {_vechain.price} and {_xrp.price} and {_solana.price} and {_cronos.price} and {_binance-coin.price} to {wallet.total.price.%{_p}%}
        wait 1 tick
        open chest with 3 rows named "Totaal: €%{wallet.total.price.%{_p}%}%" to {_p}
        wait 1 tick

        set slot 0 of {_p}'s current inventory to a iron ingot named "&7Bitcoin" with nbt "{mtcustom:bitcoin}" with lore "" and "&8Totaal: %{_bitcoin}%" and "&8Waarde: €%{_bitcoin.price}%"
        set slot 1 of {_p}'s current inventory to a iron ingot named "&7Ethereum" with nbt "{mtcustom:ethereum}" with lore "" and "&8Totaal: %{_ethereum}%" and "&8Waarde: €%{_ethereum.price}%"
        set slot 2 of {_p}'s current inventory to a iron ingot named "&7Maker" with nbt "{mtcustom:maker}" with lore "" and "&8Totaal: %{_maker}%" and "&8Waarde: €%{_maker.price}%"
        set slot 3 of {_p}'s current inventory to a iron ingot named "&7Bitcoin cash" with nbt "{mtcustom:bitcoincash}" with lore "" and "&8Totaal: %{_bitcoin-cash}%" and "&8Waarde: €%{_bitcoin-cash.price}%"
        set slot 4 of {_p}'s current inventory to a iron ingot named "&7Litecoin" with nbt "{mtcustom:litecoin}" with lore "" and "&8Totaal: %{_litecoin}%" and "&8Waarde: €%{_litecoin.price}%"
        set slot 5 of {_p}'s current inventory to a iron ingot named "&7Dash" with nbt "{mtcustom:dashcoin}" with lore "" and "&8Totaal: %{_dash}%" and "&8Waarde: €%{_dash.price}%"
        set slot 6 of {_p}'s current inventory to a iron ingot named "&7Cardano" with nbt "{mtcustom:cardano}" with lore "" and "&8Totaal: %{_cardano}%" and "&8Waarde: €%{_cardano.price}%"
        set slot 7 of {_p}'s current inventory to a iron ingot named "&7Tether" with nbt "{mtcustom:tether}" with lore "" and "&8Totaal: %{_tether}%" and "&8Waarde: €%{_tether.price}%"
        set slot 8 of {_p}'s current inventory to a iron ingot named "&7Dogecoin" with nbt "{mtcustom:dogecoin}" with lore "" and "&8Totaal: %{_dogecoin}%" and "&8Waarde: €%{_dogecoin.price}%"
        set slot 9 of {_p}'s current inventory to a iron ingot named "&7Ethereum classic" with nbt "{mtcustom:ethereum-classic}" with lore "" and "&8Totaal: %{_ethereum-classic}%" and "&8Waarde: €%{_ethereum-classic.price}%"
        set slot 10 of {_p}'s current inventory to a iron ingot named "&7VeChain" with nbt "{mtcustom:vechain}" with lore "" and "&8Totaal: %{_vechain}%" and "&8Waarde: €%{_vechain.price}%"
        set slot 11 of {_p}'s current inventory to a iron ingot named "&7XRP" with nbt "{mtcustom:xrp}" with lore "" and "&8Totaal: %{_xrp}%" and "&8Waarde: €%{_xrp.price}%"
        set slot 12 of {_p}'s current inventory to a iron ingot named "&7Solana" with nbt "{mtcustom:solana}" with lore "" and "&8Totaal: %{_solana}%" and "&8Waarde: €%{_solana.price}%"
        set slot 13 of {_p}'s current inventory to a iron ingot named "&7Cronos" with nbt "{mtcustom:cronos}" with lore "" and "&8Totaal: %{_cronos}%" and "&8Waarde: €%{_cronos.price}%"
        set slot 14 of {_p}'s current inventory to a iron ingot named "&7Binance Coin" with nbt "{mtcustom:binance-coin}" with lore "" and "&8Totaal: %{_binance-coin}%" and "&8Waarde: €%{_binance-coin.price}%"

        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"

on inventory click:
    if name of player's current inventory is "Wallet %player%":
        if clicked slot is 11:
            wallet("coins", player)
        if clicked slot is 15:
            wallet("tegoed", player)
        if clicked slot is 22:
            cryptoMarket("gui", player)
        cancel event
    if name of player's current inventory is "Tegoed: %{crypto-tegoed.%player%}%":
        if clicked slot is 11: # Storten
            close player's inventory
            wait 1 tick
            send "&6Typ cancel als je wilt stoppen."
            send "&6Hoeveel € wil je storten? Let op het bedrag dat je invoerd zijn euro's"
            set {crypto.deposit.%player%} to true
        if clicked slot is 15: # Opnemen
            cancel event
            close player's inventory
            wait 1 tick
            send "&6Typ cancel als je wilt stoppen."
            send "&6Hoeveel € wil je opnemen? Let op het bedrag dat je invoerd zijn dollars"
            set {crypto.withdraw.%player%} to true
        if clicked slot is 22:
            wallet("main", player)
        cancel event
    if name of player's current inventory is "Totaal: €%{wallet.total.price.%player%}%":
        if clicked slot is 0:
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("bitcoinSell", player)
        if clicked slot is 1:
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("ethereumSell", player)
        if clicked slot is 2:
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("makerSell", player)
        if clicked slot is 3:
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("bitcoin-cashSell", player)
        if clicked slot is 4:
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("litecoinSell", player)
        if clicked slot is 5:
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("dashSell", player)
        if clicked slot is 6:
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("cardanoSell", player)
        if clicked slot is 7:
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("tetherSell", player)
        if clicked slot is 8:
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("dogecoinSell", player)
        if clicked slot is 9:
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("ethereum-classicSell", player)
        if clicked slot is 10:
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("vechainSell", player)
        if clicked slot is 11:
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("xrpSell", player)
        if clicked slot is 12:
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("solanaSell", player)
        if clicked slot is 13:
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("cronostSell", player)
        if clicked slot is 14:
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("binance-coinSell", player)
        if clicked slot is 22:
            wallet("main", player)
        cancel event            

on chat:
    if {crypto.deposit.%player%} is true:
        cancel event
        set {_message} to message
        walletDeposit(player, {_message})
    if {crypto.withdraw.%player%} is true:
        cancel event
        set {_message} to message
        walletWithdraw(player, {_message})

function walletDeposit(p: player, message: text):
    if {_message} parsed as number is a number:
        if {_message} parsed as number is not 0:
            if {_p}'s balance is greater than or equal to {_message} parsed as number:
                set {_message} to {_message} parsed as number
                send "&aJe hebt succesvol €%{_message}% gestort op je wallet." to {_p}

                set {_balance} to yaml value "tegoed" in "crypto-%uuid of {_p}%"
                add {_message} to {_balance}
                set yaml value "tegoed" in "crypto-%uuid of {_p}%" to {_balance}
                save yaml "crypto-%uuid of {_p}%"

                set {crypto.deposit.%{_p}%} to false
            else:
                send "&cJe hebt niet genoeg geld op je bank rekening!" to {_p}
        else:
            send "&cJe kan geen 0 invoeren." to {_p}
    else if {_message} contains "cancel":
        set {crypto.deposit.%{_p}%} to false
        send "&cJe hebt het storten gecanceld." to {_p}
    else:
        send "&cDit is geen geldig getal." to {_p}

function walletWithdraw(p: player, message: text):
    set {_balance} to yaml value "tegoed" in "crypto-%uuid of {_p}%"
    if {_message} parsed as number is a number:
        if {_message} parsed as number is not 0:
            if {_balance} is greater than or equal to {_message} parsed as number:
                send "&aJe hebt succesvol €%{_message}% opgenomen van je wallet." to {_p}

                remove {_message} parsed as number from {_balance}
                set yaml value "tegoed" in "crypto-%uuid of {_p}%" to {_balance}
                save yaml "crypto-%uuid of {_p}%"

                add {_message} to {_p}'s balance

                set {crypto.withdraw.%{_p}%} to false
            else:
                send "&cJe hebt niet genoeg tegoed!" to {_p}
        else:
            send "&cJe kan geen 0 invoeren." to {_p}
    else if {_message} contains "all":
        if {_balance} is greater than 0:
            send "&aJe hebt succesvol €%{_balance}% opgenomen van je wallet." to {_p}
            add {_balance} to {_p}'s balance

            set {_balance} to 0
            set yaml value "tegoed" in "crypto-%uuid of {_p}%" to {_balance}
            save yaml "crypto-%uuid of {_p}%"

            set {crypto.withdraw.%{_p}%} to false
        else:
            send "&cJe hebt niet genoeg tegoed!" to {_p}
    else if {_message} contains "cancel":
        set {crypto.withdraw.%{_p}%} to false
        send "&cJe hebt de opname gecanceld." to {_p}
    else:
        send "&cDit is geen geldig getal." to {_p}

# /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ #
#
#
# API
#
#
# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ #

function request(link: text) :: objects:
    send a request to "%{_link}%"
    map json last http response's body to {_json::*}
    return {_json::*}

on load:
    send a request to "https://api.exchangerate.host/convert?from=EUR&to=USD"
    map json last http response's body to {price_euro-price_usd::*}
    # send "%{price_euro-price_usd::result}%" to console

every 60 seconds in world "world":
    # clear {bitcoin::1::price_eur}
    # clear {bitcoin::1::price_usd}
    # clear {ethereum::1::price_eur}
    # clear {ethereum::1::price_usd}
    # clear {maker::1::price_eur}
    # clear {maker::1::price_usd}
    # clear {bitcoin-cash::1::price_eur}
    # clear {bitcoin-cash::1::price_usd}
    # clear {litecoin::1::price_eur}
    # clear {litecoin::1::price_usd}
    # clear {dash::1::price_eur}
    # clear {dash::1::price_usd}
    # clear {cardano::1::price_eur}
    # clear {cardano::1::price_usd}
    # clear {tether::1::price_eur}
    # clear {tether::1::price_usd}
    # clear {dogecoin::1::price_eur}
    # clear {dogecoin::1::price_usd}
    # clear {ethereum-classic::1::price_eur}
    # clear {ethereum-classic::1::price_usd}
    # clear {vechain::1::price_eur}
    # clear {vechain::1::price_usd}
    # clear {xrp::1::price_eur}
    # clear {xrp::1::price_usd}
    # clear {solana::1::price_eur}
    # clear {solana::1::price_usd}
    # clear {cronos::1::price_eur}
    # clear {cronos::1::price_usd}
    # clear {binance-coin::1::price_eur}
    # clear {binance-coin::1::price_usd}


    send a request to "https://api.coinlore.net/api/ticker/?id=90" with the headers "Content-Type: application/json"
    map json last http response's body to {bitcoin::*}
    set {bitcoin::1::price_eur} to {bitcoin::1::price_usd} parsed as number / 1.02
    set {bitcoin::1::volume_eur} to {bitcoin::1::volume24} parsed as number / 1.02

    wait 0.5 seconds

    send a request to "https://api.coinlore.net/api/ticker/?id=80" with the headers "Content-Type: application/json"
    map json last http response's body to {ethereum::*}
    set {ethereum::1::price_eur} to {ethereum::1::price_usd} parsed as number / 1.02
    set {ethereum::1::volume_eur} to {ethereum::1::volume24} parsed as number / 1.02

    wait 0.5 seconds

    send a request to "https://api.coinlore.net/api/ticker/?id=12377" with the headers "Content-Type: application/json"
    map json last http response's body to {maker::*}
    set {maker::1::price_eur} to {maker::1::price_usd} parsed as number / 1.02
    set {maker::1::volume_eur} to {maker::1::volume24} parsed as number / 1.02

    wait 0.5 seconds

    send a request to "https://api.coinlore.net/api/ticker/?id=2321" with the headers "Content-Type: application/json"
    map json last http response's body to {bitcoin-cash::*}
    set {bitcoin-cash::1::price_eur} to {bitcoin-cash::1::price_usd} parsed as number / 1.02
    set {bitcoin-cash::1::volume_eur} to {bitcoin-cash::1::volume24} parsed as number / 1.02

    wait 0.5 seconds

    send a request to "https://api.coinlore.net/api/ticker/?id=1" with the headers "Content-Type: application/json"
    map json last http response's body to {litecoin::*}
    set {litecoin::1::price_eur} to {litecoin::1::price_usd} parsed as number / 1.02
    set {litecoin::1::volume_eur} to {litecoin::1::volume24} parsed as number / 1.02

    wait 0.5 seconds

    send a request to "https://api.coinlore.net/api/ticker/?id=8" with the headers "Content-Type: application/json"
    map json last http response's body to {dash::*}
    set {dash::1::price_eur} to {dash::1::price_usd} parsed as number / 1.02
    set {dash::1::volume_eur} to {dash::1::volume24} parsed as number / 1.02

    wait 0.5 seconds

    send a request to "https://api.coinlore.net/api/ticker/?id=257" with the headers "Content-Type: application/json"
    map json last http response's body to {cardano::*}
    set {cardano::1::price_eur} to {cardano::1::price_usd} parsed as number / 1.02
    set {cardano::1::volume_eur} to {cardano::1::volume24} parsed as number / 1.02

    wait 0.5 seconds

    send a request to "https://api.coinlore.net/api/ticker/?id=518" with the headers "Content-Type: application/json"
    map json last http response's body to {tether::*}
    set {tether::1::price_eur} to {tether::1::price_usd} parsed as number / 1.02
    set {tether::1::volume_eur} to {tether::1::volume24} parsed as number / 1.02

    wait 0.5 seconds
    
    send a request to "https://api.coinlore.net/api/ticker/?id=2" with the headers "Content-Type: application/json"
    map json last http response's body to {dogecoin::*}
    set {dogecoin::1::price_eur} to {dogecoin::1::price_usd} parsed as number / 1.02
    set {dogecoin::1::volume_eur} to {dogecoin::1::volume24} parsed as number / 1.02

    wait 0.5 seconds

    send a request to "https://api.coinlore.net/api/ticker/?id=118" with the headers "Content-Type: application/json"
    map json last http response's body to {ethereum-classic::*}
    set {ethereum-classic::1::price_eur} to {ethereum-classic::1::price_usd} parsed as number / 1.02
    set {ethereum-classic::1::volume_eur} to {ethereum-classic::1::volume24} parsed as number / 1.02

    wait 0.5 seconds

    send a request to "https://api.coinlore.net/api/ticker/?id=2741" with the headers "Content-Type: application/json"
    map json last http response's body to {vechain::*}
    set {vechain::1::price_eur} to {vechain::1::price_usd} parsed as number / 1.02
    set {vechain::1::volume_eur} to {vechain::1::volume24} parsed as number / 1.02

    wait 0.5 seconds

    send a request to "https://api.coinlore.net/api/ticker/?id=58" with the headers "Content-Type: application/json"
    map json last http response's body to {xrp::*}
    set {xrp::1::price_eur} to {xrp::1::price_usd} parsed as number / 1.02
    set {xrp::1::volume_eur} to {xrp::1::volume24} parsed as number / 1.02

    wait 0.5 seconds

    send a request to "https://api.coinlore.net/api/ticker/?id=48543" with the headers "Content-Type: application/json"
    map json last http response's body to {solana::*}
    set {solana::1::price_eur} to {solana::1::price_usd} parsed as number / 1.02
    set {solana::1::volume_eur} to {solana::1::volume24} parsed as number / 1.02

    wait 0.5 seconds

    send a request to "https://api.coinlore.net/api/ticker/?id=33819" with the headers "Content-Type: application/json"
    map json last http response's body to {cronos::*}
    set {cronos::1::price_eur} to {cronos::1::price_usd} parsed as number / 1.02
    set {cronos::1::volume_eur} to {cronos::1::volume24} parsed as number / 1.02

    wait 0.5 seconds

    send a request to "https://api.coinlore.net/api/ticker/?id=2710" with the headers "Content-Type: application/json"
    map json last http response's body to {binance-coin::*}
    set {binance-coin::1::price_eur} to {binance-coin::1::price_usd} parsed as number / 1.02
    set {binance-coin::1::volume_eur} to {binance-coin::1::volume24} parsed as number / 1.02

    loop all players:
        if name of loop-player's current inventory is "Crypto Markt":
            cryptoMarket("gui", loop-player)

# /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ #
#
#
# GUI's
#
#
# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ #

function cryptoMarket(coin: text, p: player):
    set {_u} to uuid of {_p}
    if {_coin} is "gui":
        open chest with 3 rows named "Crypto Markt" to {_p}

        set slot 26 of {_p}'s current inventory to a diamond hoe named "&bWallet" with nbt "{mtwcustom:portemonnee_groot}"

        add "bitcoin" to {_coins::*}
        add "ethereum" to {_coins::*}
        add "maker" to {_coins::*}
        add "bitcoin-cash" to {_coins::*}
        add "litecoin" to {_coins::*}
        add "dash" to {_coins::*}
        add "cardano" to {_coins::*}
        add "tether" to {_coins::*}
        add "dogecoin" to {_coins::*}
        add "ethereum-classic" to {_coins::*}
        add "vechain" to {_coins::*}
        add "xrp" to {_coins::*}
        add "solana" to {_coins::*}
        add "cronos" to {_coins::*}
        add "binance-coin" to {_coins::*}

        add "Bitcoin" to {_coins::upper::*}
        add "Ethereum" to {_coins::upper::*}
        add "Maker" to {_coins::upper::*}
        add "Litecoin" to {_coins::upper::*}
        add "Dash" to {_coins::upper::*}
        add "Cardano" to {_coins::upper::*}
        add "Tether" to {_coins::upper::*}
        add "Dogecoin" to {_coins::upper::*}
        add "Vechain" to {_coins::upper::*}
        add "XRP" to {_coins::upper::*}
        add "Solana" to {_coins::upper::*}
        add "Cronos" to {_coins::upper::*}

        loop {_coins::*}:
            set {_%loop-value%::1::percent_change_24h} to {%loop-value%::1::percent_change_24h} parsed as number
            if {_%loop-value%::1::percent_change_24h} is greater than 0.0:
                set slot 0 of {_p}'s current inventory to a iron ingot named ("hello" to first character uppercase)

        set {_bitcoin::1::percent_change_24h} to {bitcoin::1::percent_change_24h} parsed as number
        if {_bitcoin::1::percent_change_24h} is greater than 0.0:
            set slot 0 of {_p}'s current inventory to a iron ingot named "&dBitcoin" with lore "&fWaarde: € %{bitcoin::1::price_eur}%" and "&a%%%{bitcoin::1::percent_change_24h}%" and "&fVolume €%{bitcoin::1::volume_eur}%" with nbt "{mtcustom:bitcoin}"
        else if {_bitcoin::1::percent_change_24h} is less than 0.0:
            set slot 0 of {_p}'s current inventory to a iron ingot named "&dBitcoin" with lore "&fWaarde: € %{bitcoin::1::price_eur}%" and "&c%%%{bitcoin::1::percent_change_24h}%" and "&fVolume €%{bitcoin::1::volume_eur}%" with nbt "{mtcustom:bitcoin}"
        else if {_bitcoin::1::percent_change_24h} is equal to 0.0:
            set slot 0 of {_p}'s current inventory to a iron ingot named "&dBitcoin" with lore "&fWaarde: € %{bitcoin::1::price_eur}%" and "&7%%%{bitcoin::1::percent_change_24h}%" and "&fVolume €%{bitcoin::1::volume_eur}%" with nbt "{mtcustom:bitcoin}"

        set {_ethereum::1::percent_change_24h} to {ethereum::1::percent_change_24h} parsed as number
        if {_ethereum::1::percent_change_24h} is greater than 0.0:
            set slot 1 of {_p}'s current inventory to a iron ingot named "&eEthereum" with lore "&fWaarde: € %{ethereum::1::price_eur}%" and "&a%%%{ethereum::1::percent_change_24h}%" and "&fVolume €%{ethereum::1::volume_eur}%" with nbt "{mtcustom:ethereum}"
        else if {_ethereum::1::percent_change_24h} is less than 0.0:
            set slot 1 of {_p}'s current inventory to a iron ingot named "&eEthereum" with lore "&fWaarde: € %{ethereum::1::price_eur}%" and "&c%%%{ethereum::1::percent_change_24h}%" and "&fVolume €%{ethereum::1::volume_eur}%" with nbt "{mtcustom:ethereum}"
        else if {_ethereum::1::percent_change_24h} is equal to 0.0:
            set slot 1 of {_p}'s current inventory to a iron ingot named "&eEthereum" with lore "&fWaarde: € %{ethereum::1::price_eur}%" and "&7%%%{ethereum::1::percent_change_24h}%" and "&fVolume €%{ethereum::1::volume_eur}%" with nbt "{mtcustom:ethereum}"

        set {_maker::1::percent_change_24h} to {maker::1::percent_change_24h} parsed as number
        if {_maker::1::percent_change_24h} is greater than 0.0:
            set slot 2 of {_p}'s current inventory to a iron ingot named "&aMaker" with lore "&fWaarde: € %{maker::1::price_eur}%" and "&a%%%{maker::1::percent_change_24h}%" and "&fVolume €%{maker::1::volume_eur}%" with nbt "{mtcustom:maker}"
        else if {_maker::1::percent_change_24h} is less than 0.0:
            set slot 2 of {_p}'s current inventory to a iron ingot named "&aMaker" with lore "&fWaarde: € %{maker::1::price_eur}%" and "&c%%%{maker::1::percent_change_24h}%" and "&fVolume €%{maker::1::volume_eur}%" with nbt "{mtcustom:maker}"
        else if {_maker::1::percent_change_24h} is equal to 0.0:
            set slot 2 of {_p}'s current inventory to a iron ingot named "&aMaker" with lore "&fWaarde: € %{maker::1::price_eur}%" and "&7%%%{maker::1::percent_change_24h}%" and "&fVolume €%{maker::1::volume_eur}%" with nbt "{mtcustom:maker}"

        set {_bitcoin-cash::1::percent_change_24h} to {bitcoin-cash::1::percent_change_24h} parsed as number
        if {_bitcoin-cash::1::percent_change_24h} is greater than 0.0:
            set slot 3 of {_p}'s current inventory to a iron ingot named "&5Bitcoin-Cash" with lore "&fWaarde: € %{bitcoin-cash::1::price_eur}%" and "&a%%%{bitcoin-cash::1::percent_change_24h}%" and "&fVolume €%{bitcoin-cash::1::volume_eur}%" with nbt "{mtcustom:bitcoincash}"
        else if {_bitcoin-cash::1::percent_change_24h} is less than 0.0:
            set slot 3 of {_p}'s current inventory to a iron ingot named "&5Bitcoin-Cash" with lore "&fWaarde: € %{bitcoin-cash::1::price_eur}%" and "&c%%%{bitcoin-cash::1::percent_change_24h}%" and "&fVolume €%{bitcoin-cash::1::volume_eur}%" with nbt "{mtcustom:bitcoincash}"
        else if {_bitcoin-cash::1::percent_change_24h} is equal to 0.0:
            set slot 3 of {_p}'s current inventory to a iron ingot named "&5Bitcoin-Cash" with lore "&fWaarde: € %{bitcoin-cash::1::price_eur}%" and "&7%%%{bitcoin-cash::1::percent_change_24h}%" and "&fVolume €%{bitcoin-cash::1::volume_eur}%" with nbt "{mtcustom:bitcoincash}"

        set {_litecoin::1::percent_change_24h} to {litecoin::1::percent_change_24h} parsed as number
        if {_litecoin::1::percent_change_24h} is greater than 0.0:
            set slot 4 of {_p}'s current inventory to a iron ingot named "&1Litecoin" with lore "&fWaarde: € %{litecoin::1::price_eur}%" and "&a%%%{litecoin::1::percent_change_24h}%" and "&fVolume €%{litecoin::1::volume_eur}%" with nbt "{mtcustom:litecoin}"
        else if {_litecoin::1::percent_change_24h} is less than 0.0:
            set slot 4 of {_p}'s current inventory to a iron ingot named "&1Litecoin" with lore "&fWaarde: € %{litecoin::1::price_eur}%" and "&c%%%{litecoin::1::percent_change_24h}%" and "&fVolume €%{litecoin::1::volume_eur}%" with nbt "{mtcustom:litecoin}"
        else if {_litecoin::1::percent_change_24h} is equal to 0.0:
            set slot 4 of {_p}'s current inventory to a iron ingot named "&1Litecoin" with lore "&fWaarde: € %{litecoin::1::price_eur}%" and "&7%%%{litecoin::1::percent_change_24h}%" and "&fVolume €%{litecoin::1::volume_eur}%" with nbt "{mtcustom:litecoin}"

        set {_dash::1::percent_change_24h} to {dash::1::percent_change_24h} parsed as number
        if {_dash::1::percent_change_24h} is greater than 0.0:
            set slot 5 of {_p}'s current inventory to a iron ingot named "&cDash" with lore "&fWaarde: € %{dash::1::price_eur}%" and "&a%%%{dash::1::percent_change_24h}%" and "&fVolume €%{dash::1::volume_eur}%" with nbt "{mtcustom:dashcoin}"
        else if {_dash::1::percent_change_24h} is less than 0.0:
            set slot 5 of {_p}'s current inventory to a iron ingot named "&cDash" with lore "&fWaarde: € %{dash::1::price_eur}%" and "&c%%%{dash::1::percent_change_24h}%" and "&fVolume €%{dash::1::volume_eur}%" with nbt "{mtcustom:dashcoin}"
        else if {_dash::1::percent_change_24h} is equal to 0.0:
            set slot 5 of {_p}'s current inventory to a iron ingot named "&cDash" with lore "&fWaarde: € %{dash::1::price_eur}%" and "&7%%%{dash::1::percent_change_24h}%" and "&fVolume €%{dash::1::volume_eur}%" with nbt "{mtcustom:dashcoin}"

        set {_cardano::1::percent_change_24h} to {cardano::1::percent_change_24h} parsed as number
        if {_cardano::1::percent_change_24h} is greater than 0.0:
            set slot 6 of {_p}'s current inventory to a iron ingot named "&bCardano" with lore "&fWaarde: € %{cardano::1::price_eur}%" and "&a%%%{cardano::1::percent_change_24h}%" and "&fVolume €%{cardano::1::volume_eur}%"  
        else if {_cardano::1::percent_change_24h} is less than 0.0:
            set slot 6 of {_p}'s current inventory to a iron ingot named "&bCardano" with lore "&fWaarde: € %{cardano::1::price_eur}%" and "&c%%%{cardano::1::percent_change_24h}%" and "&fVolume €%{cardano::1::volume_eur}%" 
        else if {_cardano::1::percent_change_24h} is equal to 0.0:
            set slot 6 of {_p}'s current inventory to a iron ingot named "&bCardano" with lore "&fWaarde: € %{cardano::1::price_eur}%" and "&7%%%{cardano::1::percent_change_24h}%" and "&fVolume €%{cardano::1::volume_eur}%" 

        set {_tether::1::percent_change_24h} to {tether::1::percent_change_24h} parsed as number
        if {_tether::1::percent_change_24h} is greater than 0.0:
            set slot 7 of {_p}'s current inventory to a iron ingot named "&bTether" with lore "&fWaarde: € %{tether::1::price_eur}%" and "&a%%%{tether::1::percent_change_24h}%" and "&fVolume €%{tether::1::volume_eur}%" 
        else if {_tether::1::percent_change_24h} is less than 0.0:
            set slot 7 of {_p}'s current inventory to a iron ingot named "&bTether" with lore "&fWaarde: € %{tether::1::price_eur}%" and "&c%%%{tether::1::percent_change_24h}%" and "&fVolume €%{tether::1::volume_eur}%" 
        else if {_tether::1::percent_change_24h} is equal to 0.0:
            set slot 7 of {_p}'s current inventory to a iron ingot named "&bTether" with lore "&fWaarde: € %{tether::1::price_eur}%" and "&7%%%{tether::1::percent_change_24h}%" and "&fVolume €%{tether::1::volume_eur}%" 

        set {_dogecoin::1::percent_change_24h} to {dogecoin::1::percent_change_24h} parsed as number
        if {_dogecoin::1::percent_change_24h} is greater than 0.0:
            set slot 8 of {_p}'s current inventory to a iron ingot named "&bDogecoin" with lore "&fWaarde: € %{dogecoin::1::price_eur}%" and "&a%%%{dogecoin::1::percent_change_24h}%" and "&fVolume €%{dogecoin::1::volume_eur}%" 
        else if {_dogecoin::1::percent_change_24h} is less than 0.0:
            set slot 8 of {_p}'s current inventory to a iron ingot named "&bDogecoin" with lore "&fWaarde: € %{dogecoin::1::price_eur}%" and "&c%%%{dogecoin::1::percent_change_24h}%" and "&fVolume €%{dogecoin::1::volume_eur}%" 
        else if {_dogecoin::1::percent_change_24h} is equal to 0.0:
            set slot 8 of {_p}'s current inventory to a iron ingot named "&bDogecoin" with lore "&fWaarde: € %{dogecoin::1::price_eur}%" and "&7%%%{dogecoin::1::percent_change_24h}%" and "&fVolume €%{dogecoin::1::volume_eur}%" 

        set {_ethereum-classic::1::percent_change_24h} to {ethereum-classic::1::percent_change_24h} parsed as number
        if {_ethereum-classic::1::percent_change_24h} is greater than 0.0:
            set slot 9 of {_p}'s current inventory to a iron ingot named "&bEthereum classic" with lore "&fWaarde: € %{ethereum-classic::1::price_eur}%" and "&a%%%{ethereum-classic::1::percent_change_24h}%" and "&fVolume €%{ethereum-classic::1::volume_eur}%" 
        else if {_ethereum-classic::1::percent_change_24h} is less than 0.0:
            set slot 9 of {_p}'s current inventory to a iron ingot named "&bEthereum classic" with lore "&fWaarde: € %{ethereum-classic::1::price_eur}%" and "&c%%%{ethereum-classic::1::percent_change_24h}%" and "&fVolume €%{ethereum-classic::1::volume_eur}%" 
        else if {_ethereum-classic::1::percent_change_24h} is equal to 0.0:
            set slot 9 of {_p}'s current inventory to a iron ingot named "&bEthereum classic" with lore "&fWaarde: € %{ethereum-classic::1::price_eur}%" and "&7%%%{ethereum-classic::1::percent_change_24h}%" and "&fVolume €%{ethereum-classic::1::volume_eur}%" 

        set {_vechain::1::percent_change_24h} to {vechain::1::percent_change_24h} parsed as number
        if {_vechain::1::percent_change_24h} is greater than 0.0:
            set slot 10 of {_p}'s current inventory to a iron ingot named "&bVeChain" with lore "&fWaarde: € %{vechain::1::price_eur}%" and "&a%%%{vechain::1::percent_change_24h}%" and "&fVolume €%{vechain::1::volume_eur}%" 
        else if {_vechain::1::percent_change_24h} is less than 0.0:
            set slot 10 of {_p}'s current inventory to a iron ingot named "&bVeChain" with lore "&fWaarde: € %{vechain::1::price_eur}%" and "&c%%%{vechain::1::percent_change_24h}%" and "&fVolume €%{vechain::1::volume_eur}%" 
        else if {_vechain::1::percent_change_24h} is equal to 0.0:
            set slot 10 of {_p}'s current inventory to a iron ingot named "&bVeChain" with lore "&fWaarde: € %{vechain::1::price_eur}%" and "&7%%%{vechain::1::percent_change_24h}%" and "&fVolume €%{vechain::1::volume_eur}%" 

        set {_xrp::1::percent_change_24h} to {xrp::1::percent_change_24h} parsed as number
        if {_xrp::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bXRP" with lore "&fWaarde: € %{xrp::1::price_eur}%" and "&a%%%{xrp::1::percent_change_24h}%" and "&fVolume €%{xrp::1::volume_eur}%" 
        else if {_xrp::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bXRP" with lore "&fWaarde: € %{xrp::1::price_eur}%" and "&c%%%{xrp::1::percent_change_24h}%" and "&fVolume €%{xrp::1::volume_eur}%" 
        else if {_xrp::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bXRP" with lore "&fWaarde: € %{xrp::1::price_eur}%" and "&7%%%{xrp::1::percent_change_24h}%" and "&fVolume €%{xrp::1::volume_eur}%" 

        set {_solana::1::percent_change_24h} to {solana::1::percent_change_24h} parsed as number
        if {_solana::1::percent_change_24h} is greater than 0.0:
            set slot 12 of {_p}'s current inventory to a iron ingot named "&bSolana" with lore "&fWaarde: € %{solana::1::price_eur}%" and "&a%%%{solana::1::percent_change_24h}%" and "&fVolume €%{solana::1::volume_eur}%" 
        else if {_solana::1::percent_change_24h} is less than 0.0:
            set slot 12 of {_p}'s current inventory to a iron ingot named "&bSolana" with lore "&fWaarde: € %{solana::1::price_eur}%" and "&c%%%{solana::1::percent_change_24h}%" and "&fVolume €%{solana::1::volume_eur}%" 
        else if {_solana::1::percent_change_24h} is equal to 0.0:
            set slot 12 of {_p}'s current inventory to a iron ingot named "&bSolana" with lore "&fWaarde: € %{solana::1::price_eur}%" and "&7%%%{solana::1::percent_change_24h}%" and "&fVolume €%{solana::1::volume_eur}%" 

        set {_cronos::1::percent_change_24h} to {cronos::1::percent_change_24h} parsed as number
        if {_cronos::1::percent_change_24h} is greater than 0.0:
            set slot 13 of {_p}'s current inventory to a iron ingot named "&bCronos" with lore "&fWaarde: € %{cronos::1::price_eur}%" and "&a%%%{cronos::1::percent_change_24h}%" and "&fVolume €%{cronos::1::volume_eur}%" 
        else if {_cronos::1::percent_change_24h} is less than 0.0:
            set slot 13 of {_p}'s current inventory to a iron ingot named "&bCronos" with lore "&fWaarde: € %{cronos::1::price_eur}%" and "&c%%%{cronos::1::percent_change_24h}%" and "&fVolume €%{cronos::1::volume_eur}%" 
        else if {_cronos::1::percent_change_24h} is equal to 0.0:
            set slot 13 of {_p}'s current inventory to a iron ingot named "&bCronos" with lore "&fWaarde: € %{cronos::1::price_eur}%" and "&7%%%{cronos::1::percent_change_24h}%" and "&fVolume €%{cronos::1::volume_eur}%" 

        set {_binance-coin::1::percent_change_24h} to {binance-coin::1::percent_change_24h} parsed as number
        if {_binance-coin::1::percent_change_24h} is greater than 0.0:
            set slot 14 of {_p}'s current inventory to a iron ingot named "&bBinance Coin" with lore "&fWaarde: € %{binance-coin::1::price_eur}%" and "&a%%%{binance-coin::1::percent_change_24h}%" and "&fVolume €%{binance-coin::1::volume_eur}%" 
        else if {_binance-coin::1::percent_change_24h} is less than 0.0:
            set slot 14 of {_p}'s current inventory to a iron ingot named "&bBinance Coin" with lore "&fWaarde: € %{binance-coin::1::price_eur}%" and "&c%%%{binance-coin::1::percent_change_24h}%" and "&fVolume €%{binance-coin::1::volume_eur}%" 
        else if {_binance-coin::1::percent_change_24h} is equal to 0.0:
            set slot 14 of {_p}'s current inventory to a iron ingot named "&bBinance Coin" with lore "&fWaarde: € %{binance-coin::1::price_eur}%" and "&7%%%{binance-coin::1::percent_change_24h}%" and "&fVolume €%{binance-coin::1::volume_eur}%" 
        



    if {_coin} is "bitcoinBuy":
        open chest with 3 rows named "Bitcoin kopen" to {_p}
        set {_bitcoin::1::percent_change_24h} to {bitcoin::1::percent_change_24h} parsed as number
        if {_bitcoin::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&dEenheden" with lore "&fWaarde: € %{bitcoin::1::price_eur}%" and "&a%%%{bitcoin::1::percent_change_24h}%" with nbt "{mtcustom:bitcoin}"
        else if {_bitcoin::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&dEenheden" with lore "&fWaarde: € %{bitcoin::1::price_eur}%" and "&c%%%{bitcoin::1::percent_change_24h}%" with nbt "{mtcustom:bitcoin}"
        else if {_bitcoin::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&dEenheden" with lore "&fWaarde: € %{bitcoin::1::price_eur}%" and "&7%%%{bitcoin::1::percent_change_24h}%" with nbt "{mtcustom:bitcoin}"
        
        set {_bitcoin::1::percent_change_24h} to {bitcoin::1::percent_change_24h} parsed as number
        if {_bitcoin::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&dBedrag" with lore "&fWaarde: € %{bitcoin::1::price_eur}%" and "&a%%%{bitcoin::1::percent_change_24h}%"
        else if {_bitcoin::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&dBedrag" with lore "&fWaarde: € %{bitcoin::1::price_eur}%" and "&c%%%{bitcoin::1::percent_change_24h}%"
        else if {_bitcoin::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&dBedrag" with lore "&fWaarde: € %{bitcoin::1::price_eur}%" and "&7%%%{bitcoin::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    if {_coin} is "bitcoinSell":
        open chest with 3 rows named "Bitcoin verkopen" to {_p}
        set {_bitcoin::1::percent_change_24h} to {bitcoin::1::percent_change_24h} parsed as number
        if {_bitcoin::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&dEenheden" with lore "&fWaarde: € %{bitcoin::1::price_eur}%" and "&a%%%{bitcoin::1::percent_change_24h}%" with nbt "{mtcustom:bitcoin}"
        else if {_bitcoin::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&dEenheden" with lore "&fWaarde: € %{bitcoin::1::price_eur}%" and "&c%%%{bitcoin::1::percent_change_24h}%" with nbt "{mtcustom:bitcoin}"
        else if {_bitcoin::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&dEenheden" with lore "&fWaarde: € %{bitcoin::1::price_eur}%" and "&7%%%{bitcoin::1::percent_change_24h}%" with nbt "{mtcustom:bitcoin}"
        
        set {_bitcoin::1::percent_change_24h} to {bitcoin::1::percent_change_24h} parsed as number
        if {_bitcoin::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&dBedrag" with lore "&fWaarde: € %{bitcoin::1::price_eur}%" and "&a%%%{bitcoin::1::percent_change_24h}%"
        else if {_bitcoin::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&dBedrag" with lore "&fWaarde: € %{bitcoin::1::price_eur}%" and "&c%%%{bitcoin::1::percent_change_24h}%"
        else if {_bitcoin::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&dBedrag" with lore "&fWaarde: € %{bitcoin::1::price_eur}%" and "&7%%%{bitcoin::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    

    if {_coin} is "ethereumBuy":
        open chest with 3 rows named "Ethereum kopen" to {_p}
        set {_ethereum::1::percent_change_24h} to {ethereum::1::percent_change_24h} parsed as number
        if {_ethereum::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&eEenheden" with lore "&fWaarde: € %{ethereum::1::price_eur}%" and "&a%%%{ethereum::1::percent_change_24h}%" with nbt "{mtcustom:ethereum}"
        else if {_ethereum::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&eEenheden" with lore "&fWaarde: € %{ethereum::1::price_eur}%" and "&c%%%{ethereum::1::percent_change_24h}%" with nbt "{mtcustom:ethereum}"
        else if {_ethereum::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&eEenheden" with lore "&fWaarde: € %{ethereum::1::price_eur}%" and "&7%%%{ethereum::1::percent_change_24h}%" with nbt "{mtcustom:ethereum}"
        
        set {_ethereum::1::percent_change_24h} to {ethereum::1::percent_change_24h} parsed as number
        if {_ethereum::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&eBedrag" with lore "&fWaarde: € %{ethereum::1::price_eur}%" and "&a%%%{ethereum::1::percent_change_24h}%"
        else if {_ethereum::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&eBedrag" with lore "&fWaarde: € %{ethereum::1::price_eur}%" and "&c%%%{ethereum::1::percent_change_24h}%"
        else if {_ethereum::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&eBedrag" with lore "&fWaarde: € %{ethereum::1::price_eur}%" and "&7%%%{ethereum::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    if {_coin} is "ethereumSell":
        open chest with 3 rows named "Ethereum verkopen" to {_p}
        set {_ethereum::1::percent_change_24h} to {ethereum::1::percent_change_24h} parsed as number
        if {_ethereum::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&eEenheden" with lore "&fWaarde: € %{ethereum::1::price_eur}%" and "&a%%%{ethereum::1::percent_change_24h}%" with nbt "{mtcustom:ethereum}"
        else if {_ethereum::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&eEenheden" with lore "&fWaarde: € %{ethereum::1::price_eur}%" and "&c%%%{ethereum::1::percent_change_24h}%" with nbt "{mtcustom:ethereum}"
        else if {_ethereum::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&eEenheden" with lore "&fWaarde: € %{ethereum::1::price_eur}%" and "&7%%%{ethereum::1::percent_change_24h}%" with nbt "{mtcustom:ethereum}"
        
        set {_ethereum::1::percent_change_24h} to {ethereum::1::percent_change_24h} parsed as number
        if {_ethereum::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&eBedrag" with lore "&fWaarde: € %{ethereum::1::price_eur}%" and "&a%%%{ethereum::1::percent_change_24h}%"
        else if {_ethereum::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&eBedrag" with lore "&fWaarde: € %{ethereum::1::price_eur}%" and "&c%%%{ethereum::1::percent_change_24h}%"
        else if {_ethereum::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&eBedrag" with lore "&fWaarde: € %{ethereum::1::price_eur}%" and "&7%%%{ethereum::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"


    if {_coin} is "makerBuy":
        open chest with 3 rows named "Maker kopen" to {_p}
        set {_maker::1::percent_change_24h} to {maker::1::percent_change_24h} parsed as number
        if {_maker::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{maker::1::price_eur}%" and "&a%%%{maker::1::percent_change_24h}%" with nbt "{mtcustom:maker}"
        else if {_maker::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{maker::1::price_eur}%" and "&c%%%{maker::1::percent_change_24h}%" with nbt "{mtcustom:maker}"
        else if {_maker::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{maker::1::price_eur}%" and "&7%%%{maker::1::percent_change_24h}%" with nbt "{mtcustom:maker}"
        
        set {_maker::1::percent_change_24h} to {maker::1::percent_change_24h} parsed as number
        if {_maker::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{maker::1::price_eur}%" and "&a%%%{maker::1::percent_change_24h}%"
        else if {_maker::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{maker::1::price_eur}%" and "&c%%%{maker::1::percent_change_24h}%"
        else if {_maker::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{maker::1::price_eur}%" and "&7%%%{maker::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    if {_coin} is "makerSell":
        open chest with 3 rows named "Maker verkopen" to {_p}
        set {_maker::1::percent_change_24h} to {maker::1::percent_change_24h} parsed as number
        if {_maker::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{maker::1::price_eur}%" and "&a%%%{maker::1::percent_change_24h}%" with nbt "{mtcustom:maker}"
        else if {_maker::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{maker::1::price_eur}%" and "&c%%%{maker::1::percent_change_24h}%" with nbt "{mtcustom:maker}"
        else if {_maker::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{maker::1::price_eur}%" and "&7%%%{maker::1::percent_change_24h}%" with nbt "{mtcustom:maker}"
        
        set {_maker::1::percent_change_24h} to {maker::1::percent_change_24h} parsed as number
        if {_maker::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{maker::1::price_eur}%" and "&a%%%{maker::1::percent_change_24h}%"
        else if {_maker::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{maker::1::price_eur}%" and "&c%%%{maker::1::percent_change_24h}%"
        else if {_maker::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{maker::1::price_eur}%" and "&7%%%{maker::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"


    if {_coin} is "bitcoin-cashBuy":
        open chest with 3 rows named "Bitcoin Cash kopen" to {_p}
        wait 1 tick
        set {_bitcoin-cash::1::percent_change_24h} to {bitcoin-cash::1::percent_change_24h} parsed as number
        if {_bitcoin-cash::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&5Eenheden" with lore "&fWaarde: € %{bitcoin-cash::1::price_eur}%" and "&a%%%{bitcoin-cash::1::percent_change_24h}%" with nbt "{mtcustom:bitcoin-cash}"
        else if {_bitcoin-cash::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&5Eenheden" with lore "&fWaarde: € %{bitcoin-cash::1::price_eur}%" and "&c%%%{bitcoin-cash::1::percent_change_24h}%" with nbt "{mtcustom:bitcoin-cash}"
        else if {_bitcoin-cash::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&5Eenheden" with lore "&fWaarde: € %{bitcoin-cash::1::price_eur}%" and "&7%%%{bitcoin-cash::1::percent_change_24h}%" with nbt "{mtcustom:bitcoin-cash}"
        
        set {_bitcoin-cash::1::percent_change_24h} to {bitcoin-cash::1::percent_change_24h} parsed as number
        if {_bitcoin-cash::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&5Bedrag" with lore "&fWaarde: € %{bitcoin-cash::1::price_eur}%" and "&a%%%{bitcoin-cash::1::percent_change_24h}%"
        else if {_bitcoin-cash::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&5Bedrag" with lore "&fWaarde: € %{bitcoin-cash::1::price_eur}%" and "&c%%%{bitcoin-cash::1::percent_change_24h}%"
        else if {_bitcoin-cash::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&5Bedrag" with lore "&fWaarde: € %{bitcoin-cash::1::price_eur}%" and "&7%%%{bitcoin-cash::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    if {_coin} is "bitcoin-cashSell":
        open chest with 3 rows named "Bitcoin Cash verkopen" to {_p}
        wait 1 tick
        set {_bitcoin-cash::1::percent_change_24h} to {bitcoin-cash::1::percent_change_24h} parsed as number
        if {_bitcoin-cash::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&5Eenheden" with lore "&fWaarde: € %{bitcoin-cash::1::price_eur}%" and "&a%%%{bitcoin-cash::1::percent_change_24h}%" with nbt "{mtcustom:bitcoin-cash}"
        else if {_bitcoin-cash::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&5Eenheden" with lore "&fWaarde: € %{bitcoin-cash::1::price_eur}%" and "&c%%%{bitcoin-cash::1::percent_change_24h}%" with nbt "{mtcustom:bitcoin-cash}"
        else if {_bitcoin-cash::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&5Eenheden" with lore "&fWaarde: € %{bitcoin-cash::1::price_eur}%" and "&7%%%{bitcoin-cash::1::percent_change_24h}%" with nbt "{mtcustom:bitcoin-cash}"
        
        set {_bitcoin-cash::1::percent_change_24h} to {bitcoin-cash::1::percent_change_24h} parsed as number
        if {_bitcoin-cash::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&5Bedrag" with lore "&fWaarde: € %{bitcoin-cash::1::price_eur}%" and "&a%%%{bitcoin-cash::1::percent_change_24h}%"
        else if {_bitcoin-cash::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&5Bedrag" with lore "&fWaarde: € %{bitcoin-cash::1::price_eur}%" and "&c%%%{bitcoin-cash::1::percent_change_24h}%"
        else if {_bitcoin-cash::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&5Bedrag" with lore "&fWaarde: € %{bitcoin-cash::1::price_eur}%" and "&7%%%{bitcoin-cash::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"


    if {_coin} is "litecoinBuy":
        open chest with 3 rows named "Litecoin kopen" to {_p}
        wait 1 tick
        set {_litecoin::1::percent_change_24h} to {litecoin::1::percent_change_24h} parsed as number
        if {_litecoin::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&1Eenheden" with lore "&fWaarde: € %{litecoin::1::price_eur}%" and "&a%%%{litecoin::1::percent_change_24h}%" with nbt "{mtcustom:litecoin}"
        else if {_litecoin::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&1Eenheden" with lore "&fWaarde: € %{litecoin::1::price_eur}%" and "&c%%%{litecoin::1::percent_change_24h}%" with nbt "{mtcustom:litecoin}"
        else if {_litecoin::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&1Eenheden" with lore "&fWaarde: € %{litecoin::1::price_eur}%" and "&7%%%{litecoin::1::percent_change_24h}%" with nbt "{mtcustom:litecoin}"
        
        set {_litecoin::1::percent_change_24h} to {litecoin::1::percent_change_24h} parsed as number
        if {_litecoin::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&1Bedrag" with lore "&fWaarde: € %{litecoin::1::price_eur}%" and "&a%%%{litecoin::1::percent_change_24h}%"
        else if {_litecoin::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&1Bedrag" with lore "&fWaarde: € %{litecoin::1::price_eur}%" and "&c%%%{litecoin::1::percent_change_24h}%"
        else if {_litecoin::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&1Bedrag" with lore "&fWaarde: € %{litecoin::1::price_eur}%" and "&7%%%{litecoin::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    if {_coin} is "litecoinSell":
        open chest with 3 rows named "Litecoin verkopen" to {_p}
        wait 1 tick
        set {_litecoin::1::percent_change_24h} to {litecoin::1::percent_change_24h} parsed as number
        if {_litecoin::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&1Eenheden" with lore "&fWaarde: € %{litecoin::1::price_eur}%" and "&a%%%{litecoin::1::percent_change_24h}%" with nbt "{mtcustom:litecoin}"
        else if {_litecoin::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&1Eenheden" with lore "&fWaarde: € %{litecoin::1::price_eur}%" and "&c%%%{litecoin::1::percent_change_24h}%" with nbt "{mtcustom:litecoin}"
        else if {_litecoin::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&1Eenheden" with lore "&fWaarde: € %{litecoin::1::price_eur}%" and "&7%%%{litecoin::1::percent_change_24h}%" with nbt "{mtcustom:litecoin}"
        
        set {_litecoin::1::percent_change_24h} to {litecoin::1::percent_change_24h} parsed as number
        if {_litecoin::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&1Bedrag" with lore "&fWaarde: € %{litecoin::1::price_eur}%" and "&a%%%{litecoin::1::percent_change_24h}%"
        else if {_litecoin::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&1Bedrag" with lore "&fWaarde: € %{litecoin::1::price_eur}%" and "&c%%%{litecoin::1::percent_change_24h}%"
        else if {_litecoin::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&1Bedrag" with lore "&fWaarde: € %{litecoin::1::price_eur}%" and "&7%%%{litecoin::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"


    if {_coin} is "dashBuy":
        open chest with 3 rows named "Dash kopen" to {_p}
        wait 1 tick
        set {_dash::1::percent_change_24h} to {dash::1::percent_change_24h} parsed as number
        if {_dash::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&cEenheden" with lore "&fWaarde: € %{dash::1::price_eur}%" and "&a%%%{dash::1::percent_change_24h}%" with nbt "{mtcustom:dashcoin}"
        else if {_dash::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&cEenheden" with lore "&fWaarde: € %{dash::1::price_eur}%" and "&c%%%{dash::1::percent_change_24h}%" with nbt "{mtcustom:dashcoin}"
        else if {_dash::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&cEenheden" with lore "&fWaarde: € %{dash::1::price_eur}%" and "&7%%%{dash::1::percent_change_24h}%" with nbt "{mtcustom:dashcoin}"
        
        set {_dash::1::percent_change_24h} to {dash::1::percent_change_24h} parsed as number
        if {_dash::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&cBedrag" with lore "&fWaarde: € %{dash::1::price_eur}%" and "&a%%%{dash::1::percent_change_24h}%"
        else if {_dash::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&cBedrag" with lore "&fWaarde: € %{dash::1::price_eur}%" and "&c%%%{dash::1::percent_change_24h}%"
        else if {_dash::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&cBedrag" with lore "&fWaarde: € %{dash::1::price_eur}%" and "&7%%%{dash::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    if {_coin} is "dashSell":
        open chest with 3 rows named "Dash verkopen" to {_p}
        wait 1 tick
        set {_dash::1::percent_change_24h} to {dash::1::percent_change_24h} parsed as number
        if {_dash::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&cEenheden" with lore "&fWaarde: € %{dash::1::price_eur}%" and "&a%%%{dash::1::percent_change_24h}%" with nbt "{mtcustom:dashcoin}"
        else if {_dash::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&cEenheden" with lore "&fWaarde: € %{dash::1::price_eur}%" and "&c%%%{dash::1::percent_change_24h}%" with nbt "{mtcustom:dashcoin}"
        else if {_dash::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&cEenheden" with lore "&fWaarde: € %{dash::1::price_eur}%" and "&7%%%{dash::1::percent_change_24h}%" with nbt "{mtcustom:dashcoin}"
        
        set {_dash::1::percent_change_24h} to {dash::1::percent_change_24h} parsed as number
        if {_dash::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&cBedrag" with lore "&fWaarde: € %{dash::1::price_eur}%" and "&a%%%{dash::1::percent_change_24h}%"
        else if {_dash::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&cBedrag" with lore "&fWaarde: € %{dash::1::price_eur}%" and "&c%%%{dash::1::percent_change_24h}%"
        else if {_dash::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&cBedrag" with lore "&fWaarde: € %{dash::1::price_eur}%" and "&7%%%{dash::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"


    if {_coin} is "cardanoBuy":
        open chest with 3 rows named "Cardano kopen" to {_p}
        wait 1 tick
        set {_cardano::1::percent_change_24h} to {cardano::1::percent_change_24h} parsed as number
        if {_cardano::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{cardano::1::price_eur}%" and "&a%%%{cardano::1::percent_change_24h}%" with nbt "{mtcustom:cardano}"
        else if {_cardano::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{cardano::1::price_eur}%" and "&c%%%{cardano::1::percent_change_24h}%" with nbt "{mtcustom:cardano}"
        else if {_cardano::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{cardano::1::price_eur}%" and "&7%%%{cardano::1::percent_change_24h}%" with nbt "{mtcustom:cardano}"
        
        set {_cardano::1::percent_change_24h} to {cardano::1::percent_change_24h} parsed as number
        if {_cardano::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{cardano::1::price_eur}%" and "&a%%%{cardano::1::percent_change_24h}%"
        else if {_cardano::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{cardano::1::price_eur}%" and "&c%%%{cardano::1::percent_change_24h}%"
        else if {_cardano::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{cardano::1::price_eur}%" and "&7%%%{cardano::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    if {_coin} is "cardanoSell":
        open chest with 3 rows named "Cardano verkopen" to {_p}
        wait 1 tick
        set {_cardano::1::percent_change_24h} to {cardano::1::percent_change_24h} parsed as number
        if {_cardano::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{cardano::1::price_eur}%" and "&a%%%{cardano::1::percent_change_24h}%" with nbt "{mtcustom:cardano}"
        else if {_cardano::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{cardano::1::price_eur}%" and "&c%%%{cardano::1::percent_change_24h}%" with nbt "{mtcustom:cardano}"
        else if {_cardano::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{cardano::1::price_eur}%" and "&7%%%{cardano::1::percent_change_24h}%" with nbt "{mtcustom:cardano}"
        
        set {_cardano::1::percent_change_24h} to {cardano::1::percent_change_24h} parsed as number
        if {_cardano::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{cardano::1::price_eur}%" and "&a%%%{cardano::1::percent_change_24h}%"
        else if {_cardano::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{cardano::1::price_eur}%" and "&c%%%{cardano::1::percent_change_24h}%"
        else if {_cardano::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{cardano::1::price_eur}%" and "&7%%%{cardano::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"


    if {_coin} is "tetherBuy":
        open chest with 3 rows named "tether kopen" to {_p}
        wait 1 tick
        set {_tether::1::percent_change_24h} to {tether::1::percent_change_24h} parsed as number
        if {_tether::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{tether::1::price_eur}%" and "&a%%%{tether::1::percent_change_24h}%" with nbt "{mtcustom:tether}"
        else if {_tether::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{tether::1::price_eur}%" and "&c%%%{tether::1::percent_change_24h}%" with nbt "{mtcustom:tether}"
        else if {_tether::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{tether::1::price_eur}%" and "&7%%%{tether::1::percent_change_24h}%" with nbt "{mtcustom:tether}"
        
        set {_tether::1::percent_change_24h} to {tether::1::percent_change_24h} parsed as number
        if {_tether::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{tether::1::price_eur}%" and "&a%%%{tether::1::percent_change_24h}%"
        else if {_tether::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{tether::1::price_eur}%" and "&c%%%{tether::1::percent_change_24h}%"
        else if {_tether::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{tether::1::price_eur}%" and "&7%%%{tether::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    if {_coin} is "tetherSell":
        open chest with 3 rows named "tether verkopen" to {_p}
        wait 1 tick
        set {_tether::1::percent_change_24h} to {tether::1::percent_change_24h} parsed as number
        if {_tether::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{tether::1::price_eur}%" and "&a%%%{tether::1::percent_change_24h}%" with nbt "{mtcustom:tether}"
        else if {_tether::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{tether::1::price_eur}%" and "&c%%%{tether::1::percent_change_24h}%" with nbt "{mtcustom:tether}"
        else if {_tether::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{tether::1::price_eur}%" and "&7%%%{tether::1::percent_change_24h}%" with nbt "{mtcustom:tether}"
        
        set {_tether::1::percent_change_24h} to {tether::1::percent_change_24h} parsed as number
        if {_tether::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{tether::1::price_eur}%" and "&a%%%{tether::1::percent_change_24h}%"
        else if {_tether::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{tether::1::price_eur}%" and "&c%%%{tether::1::percent_change_24h}%"
        else if {_tether::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{tether::1::price_eur}%" and "&7%%%{tether::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"


    if {_coin} is "dogecoinBuy":
        open chest with 3 rows named "Dogecoin kopen" to {_p}
        wait 1 tick
        set {_dogecoin::1::percent_change_24h} to {dogecoin::1::percent_change_24h} parsed as number
        if {_dogecoin::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{dogecoin::1::price_eur}%" and "&a%%%{dogecoin::1::percent_change_24h}%" with nbt "{mtcustom:dogecoin}"
        else if {_dogecoin::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{dogecoin::1::price_eur}%" and "&c%%%{dogecoin::1::percent_change_24h}%" with nbt "{mtcustom:dogecoin}"
        else if {_dogecoin::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{dogecoin::1::price_eur}%" and "&7%%%{dogecoin::1::percent_change_24h}%" with nbt "{mtcustom:dogecoin}"
        
        set {_dogecoin::1::percent_change_24h} to {dogecoin::1::percent_change_24h} parsed as number
        if {_dogecoin::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{dogecoin::1::price_eur}%" and "&a%%%{dogecoin::1::percent_change_24h}%"
        else if {_dogecoin::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{dogecoin::1::price_eur}%" and "&c%%%{dogecoin::1::percent_change_24h}%"
        else if {_dogecoin::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{dogecoin::1::price_eur}%" and "&7%%%{dogecoin::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    if {_coin} is "dogecoinSell":
        open chest with 3 rows named "Dogecoin verkopen" to {_p}
        wait 1 tick
        set {_dogecoin::1::percent_change_24h} to {dogecoin::1::percent_change_24h} parsed as number
        if {_dogecoin::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{dogecoin::1::price_eur}%" and "&a%%%{dogecoin::1::percent_change_24h}%" with nbt "{mtcustom:dogecoin}"
        else if {_dogecoin::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{dogecoin::1::price_eur}%" and "&c%%%{dogecoin::1::percent_change_24h}%" with nbt "{mtcustom:dogecoin}"
        else if {_dogecoin::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{dogecoin::1::price_eur}%" and "&7%%%{dogecoin::1::percent_change_24h}%" with nbt "{mtcustom:dogecoin}"
        
        set {_dogecoin::1::percent_change_24h} to {dogecoin::1::percent_change_24h} parsed as number
        if {_dogecoin::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{dogecoin::1::price_eur}%" and "&a%%%{dogecoin::1::percent_change_24h}%"
        else if {_dogecoin::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{dogecoin::1::price_eur}%" and "&c%%%{dogecoin::1::percent_change_24h}%"
        else if {_dogecoin::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{dogecoin::1::price_eur}%" and "&7%%%{dogecoin::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"

    
    if {_coin} is "ethereum-classicBuy":
        open chest with 3 rows named "Ethereum classic kopen" to {_p}
        wait 1 tick
        set {_ethereum-classic::1::percent_change_24h} to {ethereum-classic::1::percent_change_24h} parsed as number
        if {_ethereum-classic::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{ethereum-classic::1::price_eur}%" and "&a%%%{ethereum-classic::1::percent_change_24h}%" with nbt "{mtcustom:ethereum-classic}"
        else if {_ethereum-classic::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{ethereum-classic::1::price_eur}%" and "&c%%%{ethereum-classic::1::percent_change_24h}%" with nbt "{mtcustom:ethereum-classic}"
        else if {_ethereum-classic::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{ethereum-classic::1::price_eur}%" and "&7%%%{ethereum-classic::1::percent_change_24h}%" with nbt "{mtcustom:ethereum-classic}"
        
        set {_ethereum-classic::1::percent_change_24h} to {ethereum-classic::1::percent_change_24h} parsed as number
        if {_ethereum-classic::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{ethereum-classic::1::price_eur}%" and "&a%%%{ethereum-classic::1::percent_change_24h}%"
        else if {_ethereum-classic::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{ethereum-classic::1::price_eur}%" and "&c%%%{ethereum-classic::1::percent_change_24h}%"
        else if {_ethereum-classic::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{ethereum-classic::1::price_eur}%" and "&7%%%{ethereum-classic::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    if {_coin} is "ethereum-classicSell":
        open chest with 3 rows named "Ethereum classic verkopen" to {_p}
        wait 1 tick
        set {_ethereum-classic::1::percent_change_24h} to {ethereum-classic::1::percent_change_24h} parsed as number
        if {_ethereum-classic::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{ethereum-classic::1::price_eur}%" and "&a%%%{ethereum-classic::1::percent_change_24h}%" with nbt "{mtcustom:ethereum-classic}"
        else if {_ethereum-classic::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{ethereum-classic::1::price_eur}%" and "&c%%%{ethereum-classic::1::percent_change_24h}%" with nbt "{mtcustom:ethereum-classic}"
        else if {_ethereum-classic::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{ethereum-classic::1::price_eur}%" and "&7%%%{ethereum-classic::1::percent_change_24h}%" with nbt "{mtcustom:ethereum-classic}"
        
        set {_ethereum-classic::1::percent_change_24h} to {ethereum-classic::1::percent_change_24h} parsed as number
        if {_ethereum-classic::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{ethereum-classic::1::price_eur}%" and "&a%%%{ethereum-classic::1::percent_change_24h}%"
        else if {_ethereum-classic::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{ethereum-classic::1::price_eur}%" and "&c%%%{ethereum-classic::1::percent_change_24h}%"
        else if {_ethereum-classic::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{ethereum-classic::1::price_eur}%" and "&7%%%{ethereum-classic::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"

    
    if {_coin} is "vechainBuy":
        open chest with 3 rows named "VeChain kopen" to {_p}
        wait 1 tick
        set {_vechain::1::percent_change_24h} to {vechain::1::percent_change_24h} parsed as number
        if {_vechain::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{vechain::1::price_eur}%" and "&a%%%{vechain::1::percent_change_24h}%" with nbt "{mtcustom:vechain}"
        else if {_vechain::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{vechain::1::price_eur}%" and "&c%%%{vechain::1::percent_change_24h}%" with nbt "{mtcustom:vechain}"
        else if {_vechain::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{vechain::1::price_eur}%" and "&7%%%{vechain::1::percent_change_24h}%" with nbt "{mtcustom:vechain}"
        
        set {_vechain::1::percent_change_24h} to {vechain::1::percent_change_24h} parsed as number
        if {_vechain::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{vechain::1::price_eur}%" and "&a%%%{vechain::1::percent_change_24h}%"
        else if {_vechain::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{vechain::1::price_eur}%" and "&c%%%{vechain::1::percent_change_24h}%"
        else if {_vechain::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{vechain::1::price_eur}%" and "&7%%%{vechain::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    if {_coin} is "vechainSell":
        open chest with 3 rows named "VeChain verkopen" to {_p}
        wait 1 tick
        set {_vechain::1::percent_change_24h} to {vechain::1::percent_change_24h} parsed as number
        if {_vechain::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{vechain::1::price_eur}%" and "&a%%%{vechain::1::percent_change_24h}%" with nbt "{mtcustom:vechain}"
        else if {_vechain::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{vechain::1::price_eur}%" and "&c%%%{vechain::1::percent_change_24h}%" with nbt "{mtcustom:vechain}"
        else if {_vechain::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{vechain::1::price_eur}%" and "&7%%%{vechain::1::percent_change_24h}%" with nbt "{mtcustom:vechain}"
        
        set {_vechain::1::percent_change_24h} to {vechain::1::percent_change_24h} parsed as number
        if {_vechain::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{vechain::1::price_eur}%" and "&a%%%{vechain::1::percent_change_24h}%"
        else if {_vechain::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{vechain::1::price_eur}%" and "&c%%%{vechain::1::percent_change_24h}%"
        else if {_vechain::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{vechain::1::price_eur}%" and "&7%%%{vechain::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"


    if {_coin} is "xrpBuy":
        open chest with 3 rows named "XRP kopen" to {_p}
        wait 1 tick
        set {_xrp::1::percent_change_24h} to {xrp::1::percent_change_24h} parsed as number
        if {_xrp::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{xrp::1::price_eur}%" and "&a%%%{xrp::1::percent_change_24h}%" with nbt "{mtcustom:xrp}"
        else if {_xrp::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{xrp::1::price_eur}%" and "&c%%%{xrp::1::percent_change_24h}%" with nbt "{mtcustom:xrp}"
        else if {_xrp::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{xrp::1::price_eur}%" and "&7%%%{xrp::1::percent_change_24h}%" with nbt "{mtcustom:xrp}"
        
        set {_xrp::1::percent_change_24h} to {xrp::1::percent_change_24h} parsed as number
        if {_xrp::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{xrp::1::price_eur}%" and "&a%%%{xrp::1::percent_change_24h}%"
        else if {_xrp::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{xrp::1::price_eur}%" and "&c%%%{xrp::1::percent_change_24h}%"
        else if {_xrp::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{xrp::1::price_eur}%" and "&7%%%{xrp::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    if {_coin} is "xrpSell":
        open chest with 3 rows named "XRP verkopen" to {_p}
        wait 1 tick
        set {_xrp::1::percent_change_24h} to {xrp::1::percent_change_24h} parsed as number
        if {_xrp::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{xrp::1::price_eur}%" and "&a%%%{xrp::1::percent_change_24h}%" with nbt "{mtcustom:xrp}"
        else if {_xrp::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{xrp::1::price_eur}%" and "&c%%%{xrp::1::percent_change_24h}%" with nbt "{mtcustom:xrp}"
        else if {_xrp::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{xrp::1::price_eur}%" and "&7%%%{xrp::1::percent_change_24h}%" with nbt "{mtcustom:xrp}"
        
        set {_xrp::1::percent_change_24h} to {xrp::1::percent_change_24h} parsed as number
        if {_xrp::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{xrp::1::price_eur}%" and "&a%%%{xrp::1::percent_change_24h}%"
        else if {_xrp::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{xrp::1::price_eur}%" and "&c%%%{xrp::1::percent_change_24h}%"
        else if {_xrp::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{xrp::1::price_eur}%" and "&7%%%{xrp::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"

    
    if {_coin} is "solanaBuy":
        open chest with 3 rows named "Solana kopen" to {_p}
        wait 1 tick
        set {_solana::1::percent_change_24h} to {solana::1::percent_change_24h} parsed as number
        if {_solana::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{solana::1::price_eur}%" and "&a%%%{solana::1::percent_change_24h}%" with nbt "{mtcustom:solana}"
        else if {_solana::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{solana::1::price_eur}%" and "&c%%%{solana::1::percent_change_24h}%" with nbt "{mtcustom:solana}"
        else if {_solana::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{solana::1::price_eur}%" and "&7%%%{solana::1::percent_change_24h}%" with nbt "{mtcustom:solana}"
        
        set {_solana::1::percent_change_24h} to {solana::1::percent_change_24h} parsed as number
        if {_solana::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{solana::1::price_eur}%" and "&a%%%{solana::1::percent_change_24h}%"
        else if {_solana::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{solana::1::price_eur}%" and "&c%%%{solana::1::percent_change_24h}%"
        else if {_solana::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{solana::1::price_eur}%" and "&7%%%{solana::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    if {_coin} is "solanaSell":
        open chest with 3 rows named "Solana verkopen" to {_p}
        wait 1 tick
        set {_solana::1::percent_change_24h} to {solana::1::percent_change_24h} parsed as number
        if {_solana::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{solana::1::price_eur}%" and "&a%%%{solana::1::percent_change_24h}%" with nbt "{mtcustom:solana}"
        else if {_solana::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{solana::1::price_eur}%" and "&c%%%{solana::1::percent_change_24h}%" with nbt "{mtcustom:solana}"
        else if {_solana::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{solana::1::price_eur}%" and "&7%%%{solana::1::percent_change_24h}%" with nbt "{mtcustom:solana}"
        
        set {_solana::1::percent_change_24h} to {solana::1::percent_change_24h} parsed as number
        if {_solana::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{solana::1::price_eur}%" and "&a%%%{solana::1::percent_change_24h}%"
        else if {_solana::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{solana::1::price_eur}%" and "&c%%%{solana::1::percent_change_24h}%"
        else if {_solana::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{solana::1::price_eur}%" and "&7%%%{solana::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"


    if {_coin} is "cronosBuy":
        open chest with 3 rows named "Cronos kopen" to {_p}
        wait 1 tick
        set {_cronos::1::percent_change_24h} to {cronos::1::percent_change_24h} parsed as number
        if {_cronos::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{cronos::1::price_eur}%" and "&a%%%{cronos::1::percent_change_24h}%" with nbt "{mtcustom:cronos}"
        else if {_cronos::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{cronos::1::price_eur}%" and "&c%%%{cronos::1::percent_change_24h}%" with nbt "{mtcustom:cronos}"
        else if {_cronos::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{cronos::1::price_eur}%" and "&7%%%{cronos::1::percent_change_24h}%" with nbt "{mtcustom:cronos}"
        
        set {_cronos::1::percent_change_24h} to {cronos::1::percent_change_24h} parsed as number
        if {_cronos::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{cronos::1::price_eur}%" and "&a%%%{cronos::1::percent_change_24h}%"
        else if {_cronos::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{cronos::1::price_eur}%" and "&c%%%{cronos::1::percent_change_24h}%"
        else if {_cronos::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{cronos::1::price_eur}%" and "&7%%%{cronos::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    if {_coin} is "cronosSell":
        open chest with 3 rows named "Cronos verkopen" to {_p}
        wait 1 tick
        set {_cronos::1::percent_change_24h} to {cronos::1::percent_change_24h} parsed as number
        if {_cronos::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{cronos::1::price_eur}%" and "&a%%%{cronos::1::percent_change_24h}%" with nbt "{mtcustom:cronos}"
        else if {_cronos::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{cronos::1::price_eur}%" and "&c%%%{cronos::1::percent_change_24h}%" with nbt "{mtcustom:cronos}"
        else if {_cronos::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{cronos::1::price_eur}%" and "&7%%%{cronos::1::percent_change_24h}%" with nbt "{mtcustom:cronos}"
        
        set {_cronos::1::percent_change_24h} to {cronos::1::percent_change_24h} parsed as number
        if {_cronos::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{cronos::1::price_eur}%" and "&a%%%{cronos::1::percent_change_24h}%"
        else if {_cronos::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{cronos::1::price_eur}%" and "&c%%%{cronos::1::percent_change_24h}%"
        else if {_cronos::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{cronos::1::price_eur}%" and "&7%%%{cronos::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"

    if {_coin} is "binance-coinBuy":
        open chest with 3 rows named "Binance Coin kopen" to {_p}
        wait 1 tick
        set {_binance-coin::1::percent_change_24h} to {binance-coin::1::percent_change_24h} parsed as number
        if {_binance-coin::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{binance-coin::1::price_eur}%" and "&a%%%{binance-coin::1::percent_change_24h}%" with nbt "{mtcustom:binance-coin}"
        else if {_binance-coin::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{binance-coin::1::price_eur}%" and "&c%%%{binance-coin::1::percent_change_24h}%" with nbt "{mtcustom:binance-coin}"
        else if {_binance-coin::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&bEenheden" with lore "&fWaarde: € %{binance-coin::1::price_eur}%" and "&7%%%{binance-coin::1::percent_change_24h}%" with nbt "{mtcustom:binance-coin}"
        
        set {_binance-coin::1::percent_change_24h} to {binance-coin::1::percent_change_24h} parsed as number
        if {_binance-coin::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{binance-coin::1::price_eur}%" and "&a%%%{binance-coin::1::percent_change_24h}%"
        else if {_binance-coin::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{binance-coin::1::price_eur}%" and "&c%%%{binance-coin::1::percent_change_24h}%"
        else if {_binance-coin::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&bBedrag" with lore "&fWaarde: € %{binance-coin::1::price_eur}%" and "&7%%%{binance-coin::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    if {_coin} is "binance-coinSell":
        open chest with 3 rows named "Binance Coin verkopen" to {_p}
        wait 1 tick
        set {_binance-coin::1::percent_change_24h} to {binance-coin::1::percent_change_24h} parsed as number
        if {_binance-coin::1::percent_change_24h} is greater than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{binance-coin::1::price_eur}%" and "&a%%%{binance-coin::1::percent_change_24h}%" with nbt "{mtcustom:binance-coin}"
        else if {_binance-coin::1::percent_change_24h} is less than 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{binance-coin::1::price_eur}%" and "&c%%%{binance-coin::1::percent_change_24h}%" with nbt "{mtcustom:binance-coin}"
        else if {_binance-coin::1::percent_change_24h} is equal to 0.0:
            set slot 11 of {_p}'s current inventory to a iron ingot named "&aEenheden" with lore "&fWaarde: € %{binance-coin::1::price_eur}%" and "&7%%%{binance-coin::1::percent_change_24h}%" with nbt "{mtcustom:binance-coin}"
        
        set {_binance-coin::1::percent_change_24h} to {binance-coin::1::percent_change_24h} parsed as number
        if {_binance-coin::1::percent_change_24h} is greater than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{binance-coin::1::price_eur}%" and "&a%%%{binance-coin::1::percent_change_24h}%"
        else if {_binance-coin::1::percent_change_24h} is less than 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{binance-coin::1::price_eur}%" and "&c%%%{binance-coin::1::percent_change_24h}%"
        else if {_binance-coin::1::percent_change_24h} is equal to 0.0:
            set slot 15 of {_p}'s current inventory to a gold ingot named "&aBedrag" with lore "&fWaarde: € %{binance-coin::1::price_eur}%" and "&7%%%{binance-coin::1::percent_change_24h}%"
        set slot 22 of {_p}'s current inventory to a iron ingot named "&cTerug" with nbt "{emoji:kruis}"
    

# /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ #
#
#
# Inventory events
#
#
# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ #

on inventory click:
    if name of player's current inventory is "Crypto Markt":

        if clicked slot is 26:
            wallet("main", player)

        if clicked slot is 0:
            if "%event-clicktype%" is "right mouse button":
                cryptoMarket("bitcoinBuy", player)
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("bitcoinSell", player)
        if clicked slot is 1:
            if "%event-clicktype%" is "right mouse button":
                cryptoMarket("ethereumBuy", player)
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("ethereumSell", player)
        if clicked slot is 2:
            if "%event-clicktype%" is "right mouse button":
                cryptoMarket("makerBuy", player)
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("makerSell", player)
        if clicked slot is 3:
            if "%event-clicktype%" is "right mouse button":
                cryptoMarket("bitcoin-cashBuy", player)
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("bitcoin-cashSell", player)
        if clicked slot is 4:
            if "%event-clicktype%" is "right mouse button":
                cryptoMarket("litecoinBuy", player)
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("litecoinSell", player)
        if clicked slot is 5:
            if "%event-clicktype%" is "right mouse button":
                cryptoMarket("dashBuy", player)
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("dashSell", player)
        if clicked slot is 6:
            if "%event-clicktype%" is "right mouse button":
                cryptoMarket("cardanoBuy", player)
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("cardanoSell", player)
        if clicked slot is 7:
            if "%event-clicktype%" is "right mouse button":
                cryptoMarket("tetherBuy", player)
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("tetherSell", player)
        if clicked slot is 8:
            if "%event-clicktype%" is "right mouse button":
                cryptoMarket("dogecoinBuy", player)
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("dogecoinSell", player)
        if clicked slot is 9:
            if "%event-clicktype%" is "right mouse button":
                cryptoMarket("ethereum-classicBuy", player)
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("ethereum-classicSell", player)
        if clicked slot is 10:
            if "%event-clicktype%" is "right mouse button":
                cryptoMarket("vechainBuy", player)
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("vechainSell", player)
        if clicked slot is 11:
            if "%event-clicktype%" is "right mouse button":
                cryptoMarket("xrpBuy", player)
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("xrpSell", player)
        if clicked slot is 12:
            if "%event-clicktype%" is "right mouse button":
                cryptoMarket("solanaBuy", player)
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("solanaSell", player)
        if clicked slot is 13:
            if "%event-clicktype%" is "right mouse button":
                cryptoMarket("cronosBuy", player)
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("cronosSell", player)
        if clicked slot is 14:
            if "%event-clicktype%" is "right mouse button":
                cryptoMarket("binance-coinBuy", player)
            if "%event-clicktype%" is "left mouse button":
                cryptoMarket("binance-coinSell", player)
        cancel event
    add "Bitcoin" to {_coins::*}
    add "Ethereum" to {_coins::*}
    add "Maker" to {_coins::*}
    add "Litecoin" to {_coins::*}
    add "Dash" to {_coins::*}
    add "Cardano" to {_coins::*}
    add "Tether" to {_coins::*}
    add "Dogecoin" to {_coins::*}
    add "Vechain" to {_coins::*}
    add "XRP" to {_coins::*}
    add "Solana" to {_coins::*}
    add "Cronos" to {_coins::*}

    loop {_coins::*}:
        if name of player's current inventory is "%loop-value% kopen":
            if clicked slot is 11:
                close player's inventory
                set {crypto.buy.%loop-value%.eenheden.%player%} to true
                send "&6Typ cancel als je wilt stoppen."
                send "&6Hoeveel %loop-value% wil je kopen?"
            if clicked slot is 15:
                close player's inventory
                set {crypto.buy.%loop-value%.bedrag.%player%} to true
                send "&6Typ cancel als je wilt stoppen."
                send "&6Hoeveel euro aan %loop-value% wil je kopen?"
            if clicked slot is 22:
                cryptoMarket("gui", player)
            cancel event
        else if name of player's current inventory is "%loop-value% verkopen":
            if clicked slot is 11:
                close player's inventory
                set {crypto.sell.%loop-value%.eenheden.%player%} to true
                send "&6Typ cancel als je wilt stoppen."
                send "&6Hoeveel %loop-value% wil je verkopen?"
            if clicked slot is 15:
                close player's inventory
                set {crypto.sell.%loop-value%.bedrag.%player%} to true
                send "&6Typ cancel als je wilt stoppen."
                send "&6Hoeveel euro aan %loop-value% wil je verkopen?"
            if clicked slot is 22:
                cryptoMarket("gui", player)
            cancel event
        
        else if name of player's current inventory is "Bitcoin Cash kopen":
            if clicked slot is 11:
                close player's inventory
                set {crypto.buy.bitcoin-cash.eenheden.%player%} to true
                send "&6Typ cancel als je wilt stoppen."
                send "&6Hoeveel Bitcoin Cash wil je kopen?"
            if clicked slot is 15:
                close player's inventory
                set {crypto.buy.bitcoin-cash.bedrag.%player%} to true
                send "&6Typ cancel als je wilt stoppen."
                send "&6Hoeveel euro aan Bitcoin Cash wil je kopen?"
            if clicked slot is 22:
                cryptoMarket("gui", player)
            cancel event

        else if name of player's current inventory is "Bitcoin Cash verkopen":
            if clicked slot is 11:
                close player's inventory
                set {crypto.sell.bitcoin-cash.eenheden.%player%} to true
                send "&6Typ cancel als je wilt stoppen."
                send "&6Hoeveel Bitcoin Cash wil je verkopen?"
            if clicked slot is 15:
                close player's inventory
                set {crypto.sell.bitcoin-cash.bedrag.%player%} to true
                send "&6Typ cancel als je wilt stoppen."
                send "&6Hoeveel euro aan Bitcoin Cash wil je verkopen?"
            if clicked slot is 22:
                cryptoMarket("gui", player)
            cancel event

        else if name of player's current inventory is "Ethereum Classic kopen":
            if clicked slot is 11:
                close player's inventory
                set {crypto.buy.ethereum-classic.eenheden.%player%} to true
                send "&6Typ cancel als je wilt stoppen."
                send "&6Hoeveel Ethereum Classic wil je kopen?"
            if clicked slot is 15:
                close player's inventory
                set {crypto.buy.ethereum-classic.bedrag.%player%} to true
                send "&6Typ cancel als je wilt stoppen."
                send "&6Hoeveel euro aan Ethereum Classic wil je kopen?"
            if clicked slot is 22:
                cryptoMarket("gui", player)
            cancel event

        else if name of player's current inventory is "Ethereum Classic verkopen":
            if clicked slot is 11:
                close player's inventory
                set {crypto.sell.ethereum-classic.eenheden.%player%} to true
                send "&6Typ cancel als je wilt stoppen."
                send "&6Hoeveel Ethereum Classic wil je verkopen?"
            if clicked slot is 15:
                close player's inventory
                set {crypto.sell.ethereum-classic.bedrag.%player%} to true
                send "&6Typ cancel als je wilt stoppen."
                send "&6Hoeveel euro aan Ethereum Classic wil je verkopen?"
            if clicked slot is 22:
                cryptoMarket("gui", player)
            cancel event

        else if name of player's current inventory is "Binance Coin kopen":
            if clicked slot is 11:
                close player's inventory
                set {crypto.buy.binance-coin.eenheden.%player%} to true
                send "&6Typ cancel als je wilt stoppen."
                send "&6Hoeveel Binance Coin wil je kopen?"
            if clicked slot is 15:
                close player's inventory
                set {crypto.buy.binance-coin.bedrag.%player%} to true
                send "&6Typ cancel als je wilt stoppen."
                send "&6Hoeveel euro aan Binance Coin wil je kopen?"
            if clicked slot is 22:
                cryptoMarket("gui", player)
            cancel event

        else if name of player's current inventory is "Binance Coin verkopen":
            if clicked slot is 11:
                close player's inventory
                set {crypto.sell.binance-coin.eenheden.%player%} to true
                send "&6Typ cancel als je wilt stoppen."
                send "&6Hoeveel Binance Coin wil je verkopen?"
            if clicked slot is 15:
                close player's inventory
                set {crypto.sell.binance-coin.bedrag.%player%} to true
                send "&6Typ cancel als je wilt stoppen."
                send "&6Hoeveel euro aan Binance Coin wil je verkopen?"
            if clicked slot is 22:
                cryptoMarket("gui", player)
            cancel event

# /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\ #
#
#
# Chat events
#
#
# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ #

function buyEenheden(coin: text, message: text, p: player):
    set {_fee} to yaml value "fee" in "crypto-config"
    set {_rekening-id} to yaml value "rekening-id" in "crypto-config"
    set {_balance} to yaml value "tegoed" in "crypto-%uuid of {_p}%"
    set {_%{_coin}%.%{_p}%} to yaml value "%{_coin}%" in "crypto-%uuid of {_p}%"
    if {_message} parsed as number is a number:
        if {_message} parsed as number is not 0:
            set {_buyPrice} to {%{_coin}%::1::price_eur} * {_message} parsed as number
            if {_balance} is greater than or equal to {_buyPrice}:
                send "&aJe hebt zojuist %{_message}% %{_coin}% gekocht" to {_p}

                remove {_buyPrice} from {_balance}
                remove {_fee} from {_balance}
                set yaml value "tegoed" in "crypto-%uuid of {_p}%" to {_balance}
                execute console command "rekening give %{_rekening-id}% %{_fee}%"

                add {_message} parsed as number to {_%{_coin}%.%{_p}%}
                set yaml value "%{_coin}%" in "crypto-%uuid of {_p}%" to {_%{_coin}%.%{_p}%}

                save yaml "crypto-%uuid of {_p}%"

                set {crypto.buy.%{_coin}%.eenheden.%{_p}%} to false

                CryptoPlayerData({_p})
                transaction({_p}, {_coin}, {_message} parsed as number, {%{_coin}%::1::price_eur}, {_buyprice}, "buy")
            else:
                send "&cSorry, je hebt hier niet genoeg geld voor." to {_p}
        else:
            send "&cVoer een geldig getal in." to {_p}
    else if {_message} contains "cancel":
        set {crypto.buy.%{_coin}%.eenheden.%{_p}%} to false
        send "&cJe hebt de aankoop gecanceld" to {_p}
    else:
        send "&cDit is geen geldig getal." to {_p}

function sellEenheden(coin: text, message: text, p: player):
    set {_fee} to yaml value "fee" in "crypto-config"
    set {_rekening-id} to yaml value "rekening-id" in "crypto-config"
    set {_balance} to yaml value "tegoed" in "crypto-%uuid of {_p}%"
    set {_%{_coin}%.%{_p}%} to yaml value "%{_coin}%" in "crypto-%uuid of {_p}%"
    if {_message} parsed as number is a number:
        if {_message} parsed as number is not 0:
            if yaml value "%{_coin}%" in "crypto-%uuid of {_p}%" is greater than or equal to {_message} parsed as number:
                send "&aJe hebt zojuist %{_message}% %{_coin}% verkocht" to {_p}

                set {_sellPrice} to {%{_coin}%::1::price_eur} * {_message} parsed as number
                add {_sellPrice} to {_balance}
                remove {_fee} from {_balance}
                set yaml value "tegoed" in "crypto-%uuid of {_p}%" to {_balance}
                execute console command "rekening give %{_rekening-id}% %{_fee}%"

                remove {_message} parsed as number from {_%{_coin}%.%{_p}%}
                set yaml value "%{_coin}%" in "crypto-%uuid of {_p}%" to {_%{_coin}%.%{_p}%}

                save yaml "crypto-%uuid of {_p}%"

                set {crypto.sell.%{_coin}%.eenheden.%{_p}%} to false

                CryptoPlayerData({_p})
                transaction({_p}, {_coin}, {_message} parsed as number, {%{_coin}%::1::price_eur}, {_sellPrice}, "sell")
            else:
                send "&cJe hebt niet genoeg %{_coin}%" to {_p}
        else:
            send "&cVoer een geldig getal in." to {_p}
    else if {_message} contains "all":
        set {_coinAmount} to yaml value "%{_coin}%" in "crypto-%uuid of {_p}%"
        set {_sellPrice} to {%{_coin}%::1::price_eur} parsed as number * {_coinAmount} parsed as number
        send "&aJe hebt zojuist %{_coinAmount}% %{_coin}% gekocht" to {_p}

        add {_sellPrice} parsed as number to {_p}'s balance
    else if {_message} contains "cancel":
        set {crypto.sell.%{_coin}%.eenheden.%{_p}%} to false
        send "&cJe hebt de de verkoop gecanceld." to {_p}
    else:
        send "&cDit is geen geldig getal." to {_p}

function buyBedrag(coin: text, message: text, p: player):
    set {_fee} to yaml value "fee" in "crypto-config"
    set {_rekening-id} to yaml value "rekening-id" in "crypto-config"
    set {_balance} to yaml value "tegoed" in "crypto-%uuid of {_p}%"
    set {_%{_coin}%.%{_p}%} to yaml value "%{_coin}%" in "crypto-%uuid of {_p}%"
    if {_message} parsed as number is a number:
        if {_message} parsed as number is not 0:
            set {_amount} to {_message} parsed as number / {%{_coin}%::1::price_eur} # Set {_amount} to the amount of a crypto coin a player is going to buy
            set {_buyPrice} to {_amount} * {%{_coin}%::1::price_eur}
            if {_balance} is greater than or equal to {_buyPrice}:
                send "&aJe hebt zojuist %{_message}% euro aan %{_coin}% gekocht." to {_p}

                remove {_buyPrice} from {_balance}
                remove {_fee} from {_balance}
                set yaml value "tegoed" in "crypto-%uuid of {_p}%" to {_balance}
                execute console command "rekening give %{_rekening-id}% %{_fee}%"

                add {_amount} to {_%{_coin}%.%{_p}%}
                set yaml value "%{_coin}%" in "crypto-%uuid of {_p}%" to {_%{_coin}%.%{_p}%}

                save yaml "crypto-%uuid of {_p}%"

                set {crypto.buy.%{_coin}%.bedrag.%{_p}%} to false

                CryptoPlayerData({_p})
                transaction({_p}, {_coin}, {_amount}, {%{_coin}%::1::price_eur}, {_buyprice}, "buy")
            else:
                send "&cSorry je hebt hier niet genoeg geld voor." to {_p}
        else:
            send "&cVoer een geldig getal in." to {_p}
    else if {_message} contains "cancel":
        set {crypto.buy.%{_coin}%.bedrag.%{_p}%} to false
        send "&cJe hebt de aankoop gecanceld." to {_p}
    else:
        send "&cDit is geen geldig getal." to {_p}

function sellBedrag(coin: text, message: text, p: player):
    set {_fee} to yaml value "fee" in "crypto-config"
    set {_rekening-id} to yaml value "rekening-id" in "crypto-config"
    set {_balance} to yaml value "tegoed" in "crypto-%uuid of {_p}%"
    set {_%{_coin}%.%{_p}%} to yaml value "%{_coin}%" in "crypto-%uuid of {_p}%"
    if {_message} parsed as number is a number:
        if {_message} parsed as number is not 0:
            set {_amount} to {_message} parsed as number / {%{_coin}%::1::price_eur}
            set {_sellPrice} to {_amount} * {%{_coin}%::1::price_eur}
            if yaml value "%{_coin}%" in "crypto-%uuid of {_p}%" is greater than or equal to {_amount}:
                send "&aJe hebt zojuist %{_message}% euro aan %{_coin}% verkocht." to {_p}

                add {_sellPrice} to {_balance}
                remove {_fee} from {_balance}
                set yaml value "tegoed" in "crypto-%uuid of {_p}%" to {_balance}
                execute console command "rekening give %{_rekening-id}% %{_fee}%"

                remove {_amount} from {_%{_coin}%.%{_p}%}
                set yaml value "%{_coin}%" in "crypto-%uuid of {_p}%" to {_%{_coin}%.%{_p}%}

                save yaml "crypto-%uuid of {_p}%"
                
                set {crypto.sell.%{_coin}%.bedrag.%{_p}%} to false

                CryptoPlayerData({_p})
                transaction({_p}, {_coin}, {_amount}, {%{_coin}%::1::price_eur}, {_sellPrice}, "sell")
            else:
                send "&cSorry je hebt niet genoeg %{_coin}%" to {_p}
        else:
            send "&cVoer een geldig getal in." to {_p}
    else if {_message} contains "cancel":
        set {crypto.sell.%{_coin}%.bedrag.%{_p}%} to false
        send "&cJe hebt de verkoop gecanceld" to {_p}
    else:
        send "&cDit is geen geldig bedrag." to {_p}

on join:
    add "bitcoin" to {_coins::*}
    add "ethereum" to {_coins::*}
    add "maker" to {_coins::*}
    add "bitcoin-cash" to {_coins::*}
    add "litecoin" to {_coins::*}
    add "dash" to {_coins::*}
    add "cardano" to {_coins::*}
    add "tether" to {_coins::*}
    add "dogecoin" to {_coins::*}
    add "ethereum-classic" to {_coins::*}
    add "vechain" to {_coins::*}
    add "xrp" to {_coins::*}
    add "solana" to {_coins::*}
    add "cronos" to {_coins::*}
    add "binance-coin" to {_coins::*}

    loop {_coins::*}:
        set {crypto.buy.%loop-value%.eenheden.%player%} to false
        set {crypto.buy.%loop-value%.bedrag.%player%} to false
        set {crypto.sell.%loop-value%.eenheden.%player%} to false
        set {crypto.sell.%loop-value%.bedrag.%player%} to false
    
    set {crypto.deposit.%player%} to false
    set {crypto.withdraw.%player%} to false

on chat:
    add "bitcoin" to {_coins::*}
    add "ethereum" to {_coins::*}
    add "maker" to {_coins::*}
    add "bitcoin-cash" to {_coins::*}
    add "litecoin" to {_coins::*}
    add "dash" to {_coins::*}
    add "cardano" to {_coins::*}
    add "tether" to {_coins::*}
    add "dogecoin" to {_coins::*}
    add "ethereum-classic" to {_coins::*}
    add "vechain" to {_coins::*}
    add "xrp" to {_coins::*}
    add "solana" to {_coins::*}
    add "cronos" to {_coins::*}
    add "binance-coin" to {_coins::*}

    loop {_coins::*}:
        if {crypto.buy.%loop-value%.eenheden.%player%} is true:
            cancel event
            set {_message} to message
            buyEenheden("%loop-value%", {_message}, player)
        if {crypto.sell.%loop-value%.eenheden.%player%} is true:
            cancel event
            set {_message} to message
            sellEenheden("%loop-value%", {_message}, player)
        if {crypto.buy.%loop-value%.bedrag.%player%} is true:
            cancel event
            set {_message} to message
            buyBedrag("%loop-value%", {_message}, player)
        if {crypto.sell.%loop-value%.bedrag.%player%} is true:
            cancel event
            set {_message} to message
            sellBedrag("%loop-value%", {_message}, player)